---
http_interactions:
- request:
    method: post
    uri: https://575ye157g9-dsn.algolia.net/1/indexes/shopify_products/query
    body:
      encoding: UTF-8
      string: '{"query":"BS 8000-0"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.2), Ruby (3.2.0)
      X-Algolia-Api-Key:
      - a057b4e74099445df2eddb7940828a10
      X-Algolia-Application-Id:
      - 575YE157G9
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 23 Nov 2023 05:10:43 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 Nov 2023 05:10:43 GMT
- request:
    method: post
    uri: https://shop-bsi.myshopify.com/api/2021-04/graphql.json
    body:
      encoding: UTF-8
      string: '{"query":"query RelatonBsi__Scrapper__Query__GetProducts($h0: String!)
        {\n  productByHandle(handle: $h0) {\n    ...RelatonBsi__Scrapper__Product__ProductFragment\n  }\n}\n\nfragment
        RelatonBsi__Scrapper__Product__ProductFragment on Product {\n  createdAt\n  publishedAt\n  updatedAt\n  productType\n  committee:
        metafield(namespace: \"global\", key: \"committee\") {\n    value\n  }\n  designated:
        metafield(namespace: \"global\", key: \"designatedStandard\") {\n    value\n  }\n  packContents:
        metafield(namespace: \"global\", key: \"packContents\") {\n    value\n  }\n  summary:
        metafield(namespace: \"global\", key: \"summary\") {\n    value\n  }\n  corrigendumHandle:
        metafield(namespace: \"global\", key: \"corrigendumHandle\") {\n    value\n  }\n  variants(first:
        250) {\n    edges {\n      node {\n        version: metafield(namespace: \"global\",
        key: \"version\") {\n          value\n        }\n        isbn: metafield(namespace:
        \"global\", key: \"isbn\") {\n          value\n        }\n      }\n    }\n  }\n  description\n}","variables":{"h0":"workmanship-on-construction-sites-introduction-and-general-principles"},"operationName":"RelatonBsi__Scrapper__Query__GetProducts"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Content-Type:
      - application/json
      X-Shopify-Storefront-Access-Token:
      - c935c196c0b7d1d86bfb5139006cfd46
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 23 Nov 2023 05:10:43 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Sorting-Hat-Podid:
      - '164'
      X-Sorting-Hat-Shopid:
      - '55553294501'
      X-Storefront-Renderer-Rendered:
      - '1'
      Vary:
      - Accept
      - Accept-Encoding
      X-Shopify-Api-Deprecated-Reason:
      - https://shopify.dev/api/usage/versioning#deprecation-practices
      X-Frame-Options:
      - DENY
      Content-Security-Policy:
      - block-all-mixed-content; frame-ancestors 'none'; upgrade-insecure-requests;
      Access-Control-Allow-Origin:
      - "*"
      X-Shopify-Api-Version:
      - 2023-01
      X-Shopid:
      - '55553294501'
      X-Shardid:
      - '164'
      Content-Language:
      - en
      Powered-By:
      - Shopify
      Server-Timing:
      - cfRequestDuration;dur=85.999966
      - processing;dur=46, db;dur=25, asn;desc="7018", edge;desc="ATL", country;desc="US",
        servedBy;desc="hnhw", graphql;desc="storefront/query/other", requestID;desc="f07b76fd-70a6-471a-aa79-2d736b0d2a0c"
      X-Shopify-Stage:
      - production
      X-Dc:
      - gcp-us-east1,gcp-us-east1,gcp-us-east1
      X-Request-Id:
      - f07b76fd-70a6-471a-aa79-2d736b0d2a0c
      X-Download-Options:
      - noopen
      X-Content-Type-Options:
      - nosniff
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - 1; mode=block
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=2pMq0Zuy%2B08qlWUsEg5agqPj9IKIhOmOVSOZkM0Pl%2F32WdVuQ52AfCDEk9cknprtcwS3%2BIAJiaj%2Fqo6tWWmydqRaWw7xduMx1kg5egRQUFTNzhfzPTsbVhVuJ5rkuDYipgtzd84q4Mg%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 82a6e84adcdd450b-ATL
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjp7InByb2R1Y3RCeUhhbmRsZSI6eyJjcmVhdGVkQXQiOiIyMDIxLTA3LTA3VDAxOjEyOjQ5WiIsInB1Ymxpc2hlZEF0IjoiMjAyMS0wNy0wN1QwMToxMjo1MloiLCJ1cGRhdGVkQXQiOiIyMDIzLTExLTA5VDEyOjEwOjE1WiIsInByb2R1Y3RUeXBlIjoic3RhbmRhcmQiLCJjb21taXR0ZWUiOnsidmFsdWUiOiJCLzIwOS8tLzYifSwiZGVzaWduYXRlZCI6eyJ2YWx1ZSI6ImZhbHNlIn0sInBhY2tDb250ZW50cyI6bnVsbCwic3VtbWFyeSI6bnVsbCwiY29ycmlnZW5kdW1IYW5kbGUiOm51bGwsInZhcmlhbnRzIjp7ImVkZ2VzIjpbeyJub2RlIjp7InZlcnNpb24iOnsidmFsdWUiOiJiYXNpYyJ9LCJpc2JuIjp7InZhbHVlIjoiOTc4IDAgNTgwIDgxNDQ0IDAifX19XX0sImRlc2NyaXB0aW9uIjoiV2hhdCBpcyBCUyA4MDAwIGFib3V0PyBCUyA4MDAwIGVzdGFibGlzaGVzIHRoZSBnZW5lcmFsIHByaW5jaXBsZXMgYmVoaW5kIHRoZSBCUyA4MDAwIHNlcmllcyBvZiBzdGFuZGFyZHMgdGhhdCBjb3ZlciB3b3JrbWFuc2hpcCBpbiB0aGUgZXhlY3V0aW9uIG9mIGNlcnRhaW4gd29ya3Mgb24gY29uc3RydWN0aW9uIHNpdGVzLiBCUyA4MDAwIGluY2x1ZGVzIGdlbmVyYWwgcHJpbmNpcGxlcyBvZiBpc3N1ZXMgc3VjaCBhcyB0b2xlcmFuY2UsIGFjY3VyYWN5LCBmaXQsIHByZXBhcmF0aW9uIG9mIG1hdGVyaWFscywgaW50ZXJkZXBlbmRlbmNpZXMgYmV0d2VlbiB0cmFkZXMsIGFuZCBkcmF3cyBhdHRlbnRpb24gdG8gY2VydGFpbiBoZWFsdGggYW5kIHNhZmV0eSBpc3N1ZXMuIEJTIDgwMDAgZ2l2ZXMgbGlua3Mgd2l0aCB0aGUgdW5pY2xhc3Mgc3lzdGVtIHRvIHByb3ZpZGUgYSBjb21tb24gcmVmZXJlbmNpbmcgc3RydWN0dXJlIHdpdGggb3RoZXIgZG9jdW1lbnRhdGlvbi4gTk9URSAxIEluZGl2aWR1YWwgcGFydHMgb2YgQlMgODAwMCBtaWdodCByZWZlciB0byB0aGUgQ29tcGV0ZW50IFBlcnNvbiBTY2hlbWVzIGluIHJlc3BlY3Qgb2YgcmVndWxhdG9yeSByZXF1aXJlbWVudHMgYW5kIHRvIEdyZWVuIERlYWwgcmVxdWlyZW1lbnRzLiBOT1RFIDIgQSBsaXN0IG9mIHRpdGxlcyBpbiB0aGUgQlMgODAwMCBzZXJpZXMgaXMgaW5jbHVkZWQgaW4gQW5uZXggQS4gV2hvIGlzIEJTIDgwMDAgZm9yPyBCUyA4MDAwIG9uIHdvcmttYW5zaGlwIG9uIGNvbnN0cnVjdGlvbiBzaXRlczogQ29uc3RydWN0aW9uIGluZHVzdHJpZXMgTWFudWZhY3R1cmUgb3Igc3VwcGxpZXIgb2YgY29uc3RydWN0aW9uIG1hdGVyaWFscyBBcmNoaXRlY3RzIENpdmlsIGVuZ2luZWVycyBDb250cmFjdG9ycyBvZiBjb25zdHJ1Y3Rpb24gbWF0ZXJpYWxzIFdoeSBzaG91bGQgeW91IHVzZSBCUyA4MDAwPyBCdXNpbmVzcyB0cmFuc2FjdGlvbnMgb2YgYWxsIGtpbmRzIGFyZSBnb2luZyBlbGVjdHJvbmljLCBhbmQgaXQgaXMgcmVhc29uYWJsZSB0byBleHBlY3QgdGhhdCB0aGlzIHdpbGwgaGF2ZSBhIHNpZ25pZmljYW50IGVmZmVjdCBvbiBvcGVyYXRpb25zIGluIHRoZSB3b3JrcGxhY2Ugb24gY29uc3RydWN0aW9uIHNpdGVzLiBCUyA4MDAwIHNldHMgQnVpbGRpbmcgSW5mb3JtYXRpb24gTW9kZWxsaW5nIChCSU0pIGFuZCBkaWdpdGFsIERhdGEgYmVuZWZpY2lhbCB0byB1c2VycyBmb3IgbWFueSBkYXRhIGF2YWlsYWJsZSBvbiBoYW5kaGVsZCBkZXZpY2VzLCBzdWNoIGFzIHBlcnNvbmFsIGFuZCB0YWJsZXQgY29tcHV0ZXJzIGFuZCBzbWFydHBob25lcy4gQlMgODAwMCBzZXRzIGd1aWRlbGluZXMgZm9yIG1lY2hhbmljYWwgaGFuZGxpbmcgcmlzayBhc3Nlc3NtZW50IHByb2NlZHVyZXMgYW5kIG1hbnVhbCBoYW5kbGluZyBhc3Nlc3NtZW50IGJhc2VkIG9uIGEgcmFuZ2Ugb2YgcmVsZXZhbnQgZmFjdG9ycyB0aGlzIHdpbGwgaGVscCB1c2VycyB0byBkZXRlcm1pbmUgYW55IHJpc2sgb2YgaW5qdXJ5IGR1cmluZyBtYW51YWwgaGFuZGxpbmcgYW5kIHNob3VsZCByZWNvbW1lbmQgYXBwcm9wcmlhdGUgYWN0aW9uIChmb3IgZXhhbXBsZSwgdHJhaW5pbmcpLiBCUyA4MDAwIHNldHMgZ3VpZGVsaW5lcyBmb3IgaGVhbHRoIGlzc3VlcyBhbmQgc2FmZXR5IGlzc3Vlcy4gVGhpcyB3aWxsIGhlbHAgeW91IHRvIGVuc3VyZSBndWlkYW5jZSByZWxhdGVkIHRvIGNvbnN0cnVjdGlvbiBvcGVyYXRpb25zIHRoYXQgYSBjb25zdHJ1Y3Rpb24gc2l0ZSBoYXMgaW4gcGxhY2UuIFdoYXTigJlzIGNoYW5nZWQgc2luY2UgdGhlIGxhc3QgdXBkYXRlPyBCUyA4MDAwLTAgcGFydGlhbGx5IHN1cGVyc2VkZXMgc29tZSBnZW5lcmFsIGFzcGVjdHMgY3VycmVudGx5IGNvdmVyZWQgaW4gdGhlIGZvbGxvd2luZyBpbmRpdmlkdWFsIHBhcnRzIG9mIHRoZSBzZXJpZXM6IEJTIDgwMDAtMToxOTg5LCBCUyA4MDAwLTIuMToxOTkwLCBCUyA4MDAwLTIuMjoxOTkwLCBCUyA4MDAwLTM6MjAwMSwgQlMgODAwMC00OjE5ODksIEJTIDgwMDAtNToxOTkwLCBCUyA4MDAwLTY6MjAxMywgQlMgODAwMC03OjE5OTAsIEJTIDgwMDAtODoxOTk0LCBCUyA4MDAwLTk6MjAwMywgQlMgODAwMC0xMDoxOTk1LCBCUyA4MDAwLTExOjIwMTEsIEJTIDgwMDAtMTI6MTk4OSwgQlMgODAwMC0xMzoxOTg5LCBCUyA4MDAwLTE0OjE5ODksIEJTIDgwMDAtMTU6MTk5MCBhbmQgQlMgODAwMC0xNjoxOTk3K0ExOjIwMTAuIn19fQ==
  recorded_at: Thu, 23 Nov 2023 05:10:43 GMT
recorded_with: VCR 6.2.0
