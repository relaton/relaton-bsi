---
http_interactions:
- request:
    method: post
    uri: https://575ye157g9-dsn.algolia.net/1/indexes/shopify_products/query
    body:
      encoding: UTF-8
      string: '{"query":"BS 8000-0"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.3.3)
      X-Algolia-Api-Key:
      - a057b4e74099445df2eddb7940828a10
      X-Algolia-Application-Id:
      - 575YE157G9
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 02 Jul 2024 00:46:48 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 02 Jul 2024 00:46:48 GMT
- request:
    method: post
    uri: https://shop-bsi.myshopify.com/api/2021-04/graphql.json
    body:
      encoding: UTF-8
      string: '{"query":"query RelatonBsi__Scrapper__Query__GetProducts($h0: String!)
        {\n  productByHandle(handle: $h0) {\n    ...RelatonBsi__Scrapper__Product__ProductFragment\n  }\n}\n\nfragment
        RelatonBsi__Scrapper__Product__ProductFragment on Product {\n  createdAt\n  publishedAt\n  updatedAt\n  productType\n  committee:
        metafield(namespace: \"global\", key: \"committee\") {\n    value\n  }\n  designated:
        metafield(namespace: \"global\", key: \"designatedStandard\") {\n    value\n  }\n  packContents:
        metafield(namespace: \"global\", key: \"packContents\") {\n    value\n  }\n  summary:
        metafield(namespace: \"global\", key: \"summary\") {\n    value\n  }\n  corrigendumHandle:
        metafield(namespace: \"global\", key: \"corrigendumHandle\") {\n    value\n  }\n  variants(first:
        250) {\n    edges {\n      node {\n        version: metafield(namespace: \"global\",
        key: \"version\") {\n          value\n        }\n        isbn: metafield(namespace:
        \"global\", key: \"isbn\") {\n          value\n        }\n      }\n    }\n  }\n  description\n}","variables":{"h0":"workmanship-on-construction-sites-introduction-and-general-principles-1"},"operationName":"RelatonBsi__Scrapper__Query__GetProducts"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Content-Type:
      - application/json
      X-Shopify-Storefront-Access-Token:
      - c935c196c0b7d1d86bfb5139006cfd46
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 02 Jul 2024 00:46:48 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Sorting-Hat-Podid:
      - '164'
      X-Sorting-Hat-Shopid:
      - '55553294501'
      X-Storefront-Renderer-Rendered:
      - '1'
      Vary:
      - Accept
      - Accept-Encoding
      X-Shopify-Api-Version-Warning:
      - https://shopify.dev/concepts/about-apis/versioning
      X-Shopify-Api-Deprecated-Reason:
      - https://shopify.dev/api/usage/versioning#deprecation-practices
      X-Frame-Options:
      - DENY
      Content-Security-Policy:
      - block-all-mixed-content; frame-ancestors 'none'; upgrade-insecure-requests;
      Access-Control-Allow-Origin:
      - "*"
      X-Shopify-Api-Version:
      - 2023-07
      X-Shopid:
      - '55553294501'
      X-Shardid:
      - '164'
      Content-Language:
      - en
      Powered-By:
      - Shopify
      Server-Timing:
      - cfRequestDuration;dur=87.999821
      - ipv6
      - processing;dur=43;desc="gc:3", db;dur=21, asn;desc="7018", edge;desc="ATL",
        country;desc="US", servedBy;desc="zwsr", graphql;desc="storefront/query/other",
        gqlSelectionNames;desc="sfr/productByHandle", requestID;desc="b7bbbd2a-42c5-41f7-9eac-db4c3ccbde07-1719881208"
      X-Dc:
      - gcp-us-east1,gcp-us-east1,gcp-us-east1
      X-Request-Id:
      - b7bbbd2a-42c5-41f7-9eac-db4c3ccbde07-1719881208
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=qNqbZR%2FITlkZz8rjn%2BgmAMtTO0dyuvTQvppSDWL9OKe%2B9QsW6kxAgKm5ldpXYKExGVMIiUL2mtmlVZaBUub8%2BcUF4Iaw0jWEsB1OtMiMyepPZYxYUU4Md7cX3uBzewyqib%2FAL2DUG4mCy0SzKFgN6h%2BQfbM%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Download-Options:
      - noopen
      Server:
      - cloudflare
      Cf-Ray:
      - 89ca9ef2b81eade7-ATL
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"data":{"productByHandle":{"createdAt":"2024-02-14T09:16:16Z","publishedAt":"2024-03-21T05:15:04Z","updatedAt":"2024-03-21T05:15:13Z","productType":"standard","committee":{"value":"B/209"},"designated":{"value":"false"},"packContents":null,"summary":null,"corrigendumHandle":null,"variants":{"edges":[{"node":{"version":{"value":"basic"},"isbn":{"value":"978
        0 539 17675 9"}}}]},"description":"1 Scope This British Standard establishes
        the general principles behind the BS 8000 series of standards that cover workmanship
        in the execution of certain works on construction sites. It includes general
        principles of issues such as tolerance, accuracy, fit, preparation of materials,
        interdependencies between trades, and draws attention to certain health and
        safety issues. It gives links with the Uniclass system (see Annex A) to provide
        a common referencing structure with other documentation. NOTE 1 Individual
        parts of BS 8000 might refer to the Competent Person Schemes in respect of
        regulatory requirements Text deleted. NOTE 2 A list of titles in the BS 8000
        series is included in Annex A."}}}'
  recorded_at: Tue, 02 Jul 2024 00:46:48 GMT
recorded_with: VCR 6.2.0
