---
http_interactions:
- request:
    method: post
    uri: https://575ye157g9-dsn.algolia.net/1/indexes/shopify_products/query
    body:
      encoding: UTF-8
      string: '{"query":"Flex 0"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.3.4), Ruby (3.3.3)
      X-Algolia-Api-Key:
      - a057b4e74099445df2eddb7940828a10
      X-Algolia-Application-Id:
      - 575YE157G9
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 28 Apr 2025 20:14:50 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '4'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 28 Apr 2025 20:14:50 GMT
- request:
    method: post
    uri: https://shop-bsi.myshopify.com/api/2021-04/graphql.json
    body:
      encoding: UTF-8
      string: '{"query":"query RelatonBsi__Scrapper__Query__GetProducts($h0: String!)
        {\n  productByHandle(handle: $h0) {\n    ...RelatonBsi__Scrapper__Product__ProductFragment\n  }\n}\n\nfragment
        RelatonBsi__Scrapper__Product__ProductFragment on Product {\n  createdAt\n  publishedAt\n  updatedAt\n  productType\n  committee:
        metafield(namespace: \"global\", key: \"committee\") {\n    value\n  }\n  designated:
        metafield(namespace: \"global\", key: \"designatedStandard\") {\n    value\n  }\n  packContents:
        metafield(namespace: \"global\", key: \"packContents\") {\n    value\n  }\n  summary:
        metafield(namespace: \"global\", key: \"summary\") {\n    value\n  }\n  corrigendumHandle:
        metafield(namespace: \"global\", key: \"corrigendumHandle\") {\n    value\n  }\n  variants(first:
        250) {\n    edges {\n      node {\n        version: metafield(namespace: \"global\",
        key: \"version\") {\n          value\n        }\n        isbn: metafield(namespace:
        \"global\", key: \"isbn\") {\n          value\n        }\n      }\n    }\n  }\n  description\n}","variables":{"h0":"principles-of-bsi-flex-standardization-1"},"operationName":"RelatonBsi__Scrapper__Query__GetProducts"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Content-Type:
      - application/json
      X-Shopify-Storefront-Access-Token:
      - c935c196c0b7d1d86bfb5139006cfd46
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 28 Apr 2025 20:14:50 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Sorting-Hat-Podid:
      - '386'
      X-Sorting-Hat-Shopid:
      - '55553294501'
      X-Storefront-Renderer-Rendered:
      - '1'
      X-Shopify-Api-Version-Warning:
      - https://shopify.dev/concepts/about-apis/versioning
      X-Shopify-Api-Deprecated-Reason:
      - https://shopify.dev/api/usage/versioning#deprecation-practices
      X-Frame-Options:
      - DENY
      Content-Security-Policy:
      - block-all-mixed-content; frame-ancestors 'none'; upgrade-insecure-requests;
      Access-Control-Allow-Origin:
      - "*"
      X-Shopify-Api-Version:
      - 2024-04
      X-Shopid:
      - '55553294501'
      X-Shardid:
      - '386'
      Vary:
      - Accept,accept-encoding
      Content-Language:
      - en
      Powered-By:
      - Shopify
      Server-Timing:
      - cfRequestDuration;dur=79.999924
      - ipv6
      - processing;dur=38, db;dur=21, asn;desc="7018", edge;desc="ATL", country;desc="US",
        servedBy;desc="69f5", graphql;desc="storefront/query/RelatonBsi__Scrapper__Query__GetProducts",
        gqlSelectionNames;desc="sfr/productByHandle", requestID;desc="d50bfbfb-621d-4451-a601-3f619ec33bc8-1745871290"
      Shopify-Complexity-Score:
      - '380'
      X-Dc:
      - gcp-us-east1,gcp-us-east1,gcp-us-east1
      X-Request-Id:
      - d50bfbfb-621d-4451-a601-3f619ec33bc8-1745871290
      Alt-Svc:
      - h3=":443"; ma=86400
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=i21s%2BUjJpIimt4Rb42E9q4RVGYxWWvJGX%2BNCi18jcHQQIuL0jTyXBU6DcM%2FmRLvbWxaC5AuKn6HWnA0skuBKxquqw9gHOJ%2BrC%2B4Pc4iIjqxKJR1xnvun8UTidqI9enU%2Fy%2FcnFFclhIyy2D0Y4bjHYShjZ7Q%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Download-Options:
      - noopen
      Shopify-Edge-Ip:
      - '2620:127:f00f:e::'
      Server:
      - cloudflare
      Cf-Ray:
      - 93793a6d9a1b139b-ATL
    body:
      encoding: ASCII-8BIT
      string: '{"data":{"productByHandle":{"createdAt":"2022-08-19T06:58:02Z","publishedAt":"2024-07-11T03:28:11Z","updatedAt":"2025-02-16T06:19:59Z","productType":"fast-track-standard","committee":{"value":"ZZ/1"},"designated":{"value":"false"},"packContents":null,"summary":null,"corrigendumHandle":null,"variants":{"edges":[{"node":{"version":{"value":"basic"},"isbn":{"value":"978
        0 539 21421 5"}}}]},"description":"To download a DRM free copy of BSI Flex
        0 v.2.0:2022-8, click here."}}}'
  recorded_at: Mon, 28 Apr 2025 20:14:50 GMT
recorded_with: VCR 6.3.1
