---
http_interactions:
- request:
    method: post
    uri: https://575ye157g9-dsn.algolia.net/1/indexes/shopify_products/query
    body:
      encoding: UTF-8
      string: '{"query":"BS NOT FOUND","facetFilters":"product_type:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.1.1), Ruby (3.0.0)
      X-Algolia-Api-Key:
      - a057b4e74099445df2eddb7940828a10
      X-Algolia-Application-Id:
      - 575YE157G9
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Wed, 25 Aug 2021 21:50:23 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '9'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"hits":[{"title":"Hydraulically bound materials for civil engineering purposes. Specification for production and installation in pavements","updated_at":"2021-07-20T04:00:03.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Pavements (sidewalks)","Pavements (roads)","Production","Installation","Civil engineering"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["91.100.01 Construction materials in general"],"industriesAlgoliaStringArray":["Construction & Building"],"publishedDate":"2019-11-30","publisher":"BSI","status":"Current","statusNumeric":300,"primaryDesignator":"BS 9227:2019"},"group_search":{"description":"Hydraulically bound materials for civil engineering purposes. Specification for production and installation in pavements","member_price":130,"price":260,"title":"BS 9227:2019"}},"handle":"hydraulically-bound-materials-for-civil-engineering-purposes-specification-for-production-and-installation-in-pavements","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892597903525,"_tags":["id:6892597903525","indexing_token:f687006f04c23fca07d5721292b20302"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":260.0,"variants_max_price":260.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_2845bd23-eb4f-4f14-aeed-fbe9e566d6bb.png?v=1625628997","created_at":"2021-07-07T04:36:35.000Z","published_at":"2021-07-07T04:36:35.000Z","body_html_safe":"  What is this standard about?  \r\n This new British Standard supplies UK construction requirements for HBM used in pavement layers. \r\n Note that HBM is used in the standard as a generic term covering a wide range of mixtures of aggregates or soil, hydraulic binders and water, including roller compacted concrete (RCC), hydraulically bound granular material (HBGM) and hydraulically stabilized soils (HSS), which are available for use in construction and maintaining roads and other paved areas. \r\n The standard was written to complement the European standard which specifies HBM (  BS EN 14227  ) and includes UK-specific content not found elsewhere. It is envisaged that BS 9227 will be used on all UK pavement schemes which incorporate HBM in future.   \r\n  Who is this standard for?  \r\n \r\n Local authorities \r\n Government departments \r\n Test houses \r\n Consultancies \r\n Contractors \r\n For reference by higher education establishments   \n \r\n \r\n  Why should you use this standard?  \r\n It specifies requirements for the production, installation, testing and conformity of HBM conforming to BS EN 14227, whether constructed by the ex-situ or in-situ method of production. \r\n It also includes requirements for preliminary work at the laying site necessary to ensure the substrate is fit to receive the HBM and supports the appropriate investigation, specification and application of these materials in pavement applications on roads, ports, airfields and heavy industrial areas. \r\n  NOTE 1: This British Standard does not include a framework for investigating and assessing in-situ soils or recycling existing pavements to produce HBM.   \r\n  NOTE 2: This British Standard relates to HBM for use in pavement layers, including the pavement foundation. Applications relat...","sku":"000000000030368322","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":260.0,"compare_at_price":130.0,"price_ratio":2.0,"price_range":"250:300","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_2845bd23-eb4f-4f14-aeed-fbe9e566d6bb.png?v=1625628997","named_tags":{},"named_tags_names":[],"objectID":"40309999239333","_snippetResult":{"body_html_safe":{"value":"and includes UK-specific content <em>not</em> <em>found</em> elsewhere. It is","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Hydraulically bound materials for civil engineering purposes. Specification for production and installation in pavements","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Pavements (sidewalks)","matchLevel":"none","matchedWords":[]},{"value":"Pavements (roads)","matchLevel":"none","matchedWords":[]},{"value":"Production","matchLevel":"none","matchedWords":[]},{"value":"Installation","matchLevel":"none","matchedWords":[]},{"value":"Civil engineering","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"91.100.01 Construction materials in general","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Construction & Building","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> 9227:2019","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  What is this standard about?  \r\n This new British Standard supplies UK construction requirements for HBM used in pavement layers. \r\n Note that HBM is used in the standard as a generic term covering a wide range of mixtures of aggregates or soil, hydraulic binders and water, including roller compacted concrete (RCC), hydraulically bound granular material (HBGM) and hydraulically stabilized soils (HSS), which are available for use in construction and maintaining roads and other paved areas. \r\n The standard was written to complement the European standard which specifies HBM (  <em>BS</em> EN 14227  ) and includes UK-specific content <em>not</em> <em>found</em> elsewhere. It is envisaged that <em>BS</em> 9227 will be used on all UK pavement schemes which incorporate HBM in future.   \r\n  Who is this standard for?  \r\n \r\n Local authorities \r\n Government departments \r\n Test houses \r\n Consultancies \r\n Contractors \r\n For reference by higher education establishments   \n \r\n \r\n  Why should you use this standard?  \r\n It specifies requirements for the production, installation, testing and conformity of HBM conforming to <em>BS</em> EN 14227, whether constructed by the ex-situ or in-situ method of production. \r\n It also includes requirements for preliminary work at the laying site necessary to ensure the substrate is fit to receive the HBM and supports the appropriate investigation, specification and application of these materials in pavement applications on roads, ports, airfields and heavy industrial areas. \r\n  NOTE 1: This British Standard does <em>not</em> include a framework for investigating and assessing in-situ soils or recycling existing pavements to produce HBM.   \r\n  NOTE 2: This British Standard relates to HBM for use in pavement layers, including the pavement foundation. Applications relat...","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Responsible sourcing sector certification schemes for construction products. Specification","updated_at":"2021-07-07T00:49:28.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Consumer-supplier relations","People","Organizations","Conditions of employment","Acceptance (approval)","Certification (approval)","Sustainable development","Economic development","Commerce","Approval organizations","Construction materials","Management","Construction systems parts","Purchasing","Enterprises","Environmental management"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["03.120.20 Product and company certification. Conformity assessment","91.010.01 Construction industry in general"],"industriesAlgoliaStringArray":["Service Management & Process","Construction & Building"],"publishedDate":"2009-10-31","publisher":"BSI","status":"Current","statusNumeric":300,"primaryDesignator":"BS 8902:2009"},"group_search":{"description":"Responsible sourcing sector certification schemes for construction products. Specification","member_price":67,"price":134,"title":"BS 8902:2009"}},"handle":"responsible-sourcing-sector-certification-schemes-for-construction-products-specification","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892095340709,"_tags":["id:6892095340709","indexing_token:2f22eed7aad1afaa737ec076f08d73d2"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_9268b2d3-236b-4081-8c34-afd45485f534.png?v=1625615368","created_at":"2021-07-07T00:49:26.000Z","published_at":"2021-07-07T00:49:25.000Z","body_html_safe":"  BS 8902:2009 Responsible sourcing sector certification schemes for construction products. Specification  \r\n As the importance of green procurement strategies in the building and construction sectors grows, government is requiring suppliers and contractors to improve their sustainability performance. Responsible sourcing schemes are a major part of this activity. Responsible sourcing is the management of sustainable development in the provision or procurement of a product. \r\n BS 8902 provides a framework for the development of sector certification schemes for responsible sourcing of construction products. It gives requirements for the management, development, content and operation of sector certification schemes for responsible sourcing and supply of construction products. It does so in alignment with the guidance given in  BS 8900:2006 Guidance for managing sustainable development . \r\n The main differences from BS 8900 are that BS 8902 includes specific requirements for audit and review, which are not to be found in BS 8900. BS 8902 embraces the principles in BS 8900 but is specific to the supply of construction products within a responsible sourcing scheme. However, whereas BS 8900 has the broadest application to organizations (and individuals) and is independent of the nature of their activities, this standard focuses more specifically on bodies that certify construction products. \r\n The relationship between BS 8902, any sector certification schemes developed in conformity with it and the organizations likely to be involved is included in the standard. Note that, although accreditation of certification schemes is desirable, accreditation is not and cannot be a requirement of this standard. \r\n  Who should use BS 8902?  \r\n \r\n Construction product producers \r\n Government bodies \r\n Certification bodies \r\n ...","sku":"000000000030191223","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_9268b2d3-236b-4081-8c34-afd45485f534.png?v=1625615368","named_tags":{},"named_tags_names":[],"objectID":"40308916224165","_snippetResult":{"body_html_safe":{"value":"which are <em>not</em> to be <em>found</em> in <em>BS</em> 8900. <em>BS</em>","matchLevel":"full"}},"_highlightResult":{"title":{"value":"Responsible sourcing sector certification schemes for construction products. Specification","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Consumer-supplier relations","matchLevel":"none","matchedWords":[]},{"value":"People","matchLevel":"none","matchedWords":[]},{"value":"Organizations","matchLevel":"none","matchedWords":[]},{"value":"Conditions of employment","matchLevel":"none","matchedWords":[]},{"value":"Acceptance (approval)","matchLevel":"none","matchedWords":[]},{"value":"Certification (approval)","matchLevel":"none","matchedWords":[]},{"value":"Sustainable development","matchLevel":"none","matchedWords":[]},{"value":"Economic development","matchLevel":"none","matchedWords":[]},{"value":"Commerce","matchLevel":"none","matchedWords":[]},{"value":"Approval organizations","matchLevel":"none","matchedWords":[]},{"value":"Construction materials","matchLevel":"none","matchedWords":[]},{"value":"Management","matchLevel":"none","matchedWords":[]},{"value":"Construction systems parts","matchLevel":"none","matchedWords":[]},{"value":"Purchasing","matchLevel":"none","matchedWords":[]},{"value":"Enterprises","matchLevel":"none","matchedWords":[]},{"value":"Environmental management","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"03.120.20 Product and company certification. Conformity assessment","matchLevel":"none","matchedWords":[]},{"value":"91.010.01 Construction industry in general","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Service Management & Process","matchLevel":"none","matchedWords":[]},{"value":"Construction & Building","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> 8902:2009","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  <em>BS</em> 8902:2009 Responsible sourcing sector certification schemes for construction products. Specification  \r\n As the importance of green procurement strategies in the building and construction sectors grows, government is requiring suppliers and contractors to improve their sustainability performance. Responsible sourcing schemes are a major part of this activity. Responsible sourcing is the management of sustainable development in the provision or procurement of a product. \r\n <em>BS</em> 8902 provides a framework for the development of sector certification schemes for responsible sourcing of construction products. It gives requirements for the management, development, content and operation of sector certification schemes for responsible sourcing and supply of construction products. It does so in alignment with the guidance given in  <em>BS</em> 8900:2006 Guidance for managing sustainable development . \r\n The main differences from <em>BS</em> 8900 are that <em>BS</em> 8902 includes specific requirements for audit and review, which are <em>not</em> to be <em>found</em> in <em>BS</em> 8900. <em>BS</em> 8902 embraces the principles in <em>BS</em> 8900 but is specific to the supply of construction products within a responsible sourcing scheme. However, whereas <em>BS</em> 8900 has the broadest application to organizations (and individuals) and is independent of the nature of their activities, this standard focuses more specifically on bodies that certify construction products. \r\n The relationship between <em>BS</em> 8902, any sector certification schemes developed in conformity with it and the organizations likely to be involved is included in the standard. Note that, although accreditation of certification schemes is desirable, accreditation is <em>not</em> and cannot be a requirement of this standard. \r\n  Who should use <em>BS</em> 8902?  \r\n \r\n Construction product producers \r\n Government bodies \r\n Certification bodies \r\n ...","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Paints and varnishes. Determination of film hardness by pencil test","updated_at":"2021-07-11T05:40:37.000Z","meta":{"global":{"status":"Current","publishedDate":"2020-02-29","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Manufacturing Processing & Goods"],"icsCodesAlgoliaStringArray":["87.040 Paints and varnishes"],"descriptorsAlgoliaStringArray":["Paints","Test specimens","Testing conditions","Films (states of matter)","Hardness testing","Coatings","Varnishes","Reproducibility","Specimen preparation","Test equipment","Panels"],"statusNumeric":300,"primaryDesignator":"BS EN ISO 15184:2020"},"group_search":{"title":"BS EN ISO 15184:2020","description":"Paints and varnishes. Determination of film hardness by pencil test","price":112,"member_price":56}},"handle":"paints-and-varnishes-determination-of-film-hardness-by-pencil-test","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6902024634533,"_tags":["id:6902024634533"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":112.0,"variants_max_price":112.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_b788cb0e-df3b-4c2a-ba17-6e2c63a7b12b.png?v=1625982036","created_at":"2021-07-11T05:40:34.000Z","published_at":"2021-07-11T05:40:34.000Z","body_html_safe":" \n   1   Scope \n   This document specifies a method for determining the film hardness by pushing pencils of known hardness over the film. \n   The test can be performed on a single coating of a paint, varnish or related product, or on the upper layer of a multi-coat system. \n   This rapid test has not been found to be useful in comparing the  pencil hardness  of different coatings. It is more useful in providing relative ratings for a series of coated panels exhibiting significant differences in  pencil hardness . \n   The method is applicable only to smooth surfaces. \n ","sku":"000000000030379087","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":112.0,"compare_at_price":56.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_b788cb0e-df3b-4c2a-ba17-6e2c63a7b12b.png?v=1625982036","named_tags":{},"named_tags_names":[],"objectID":"40335877570725","_snippetResult":{"body_html_safe":{"value":"system. \n   This rapid test has <em>not</em> been <em>found</em> to be","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Paints and varnishes. Determination of film hardness by pencil test","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Manufacturing Processing & Goods","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"87.040 Paints and varnishes","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Paints","matchLevel":"none","matchedWords":[]},{"value":"Test specimens","matchLevel":"none","matchedWords":[]},{"value":"Testing conditions","matchLevel":"none","matchedWords":[]},{"value":"Films (states of matter)","matchLevel":"none","matchedWords":[]},{"value":"Hardness testing","matchLevel":"none","matchedWords":[]},{"value":"Coatings","matchLevel":"none","matchedWords":[]},{"value":"Varnishes","matchLevel":"none","matchedWords":[]},{"value":"Reproducibility","matchLevel":"none","matchedWords":[]},{"value":"Specimen preparation","matchLevel":"none","matchedWords":[]},{"value":"Test equipment","matchLevel":"none","matchedWords":[]},{"value":"Panels","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> EN ISO 15184:2020","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This document specifies a method for determining the film hardness by pushing pencils of known hardness over the film. \n   The test can be performed on a single coating of a paint, varnish or related product, or on the upper layer of a multi-coat system. \n   This rapid test has <em>not</em> been <em>found</em> to be useful in comparing the  pencil hardness  of different coatings. It is more useful in providing relative ratings for a series of coated panels exhibiting significant differences in  pencil hardness . \n   The method is applicable only to smooth surfaces. \n ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Internal combustion engines. Piston rings - Quality requirements","updated_at":"2021-07-10T05:46:02.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Force","Pistons","Quality","Visual inspection (testing)","Engine components","Defects","Reciprocating engines","Surface defects","Machining tolerances","Testing conditions","Reciprocating parts","Size","Piston rings"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["43.060.10 Engine block and internal components"],"industriesAlgoliaStringArray":["Automotive"],"publishedDate":"2020-01-31","publisher":"BSI","status":"Current","statusNumeric":300,"primaryDesignator":"BS ISO 6621-5:2020"},"group_search":{"description":"Internal combustion engines. Piston rings - Quality requirements","member_price":67,"price":134,"title":"BS ISO 6621-5:2020"}},"handle":"internal-combustion-engines-piston-rings-quality-requirements","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6900537819301,"_tags":["id:6900537819301","indexing_token:f6adc08e93dcbf726b6ffb497bf8cda2"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_a2a1ada3-c68b-4a8e-8a79-5f835fe031e4.png?v=1625892362","created_at":"2021-07-10T05:46:00.000Z","published_at":"2021-07-10T05:45:59.000Z","body_html_safe":" \n   1   Scope \n   This document specifies quality aspects that can be defined but that are not normally found on a drawing specification. \n   It covers the following: \n   \n     \n       \n         \n           —  single‑piece piston rings of grey cast iron or steel; \n       \n       \n         \n           —  multi‑piece piston rings (oil control rings) consisting of cast iron parts and spring components; and \n       \n       \n         \n           —  single‑piece and multi‑piece oil control rings of steel, i.e. oil control rings in the form of strip steel components or steel segments (rails) with spring expander components. \n       \n     \n   \n   In addition to specifying some of the limits of acceptance relating to inspection measuring principles (covered by ISO 6621‑2), this document also covers those features for which no recognized quantitative measurement procedures exist and which are only checked visually with normal eyesight (glasses if worn normally) and without magnification. Such features (superficial defects) are additional to the standard tolerances of ring width, radial wall thickness and closed gap. \n   This document does not establish acceptable quality levels (AQL), it being left to manufacturer and customer to decide the appropriate levels jointly. In this case, the recommendations of ISO 2859‑1 are followed. \n   This document specifies the quality requirements of piston rings for reciprocating internal combustion engines for road vehicles and other applications. It is applicable to all such rings of a nominal diameter from 30 mm up to and i...","sku":"000000000030325128","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_a2a1ada3-c68b-4a8e-8a79-5f835fe031e4.png?v=1625892362","named_tags":{},"named_tags_names":[],"objectID":"40331454513317","_snippetResult":{"body_html_safe":{"value":"be defined but that are <em>not</em> normally <em>found</em> on a","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Internal combustion engines. Piston rings - Quality requirements","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Force","matchLevel":"none","matchedWords":[]},{"value":"Pistons","matchLevel":"none","matchedWords":[]},{"value":"Quality","matchLevel":"none","matchedWords":[]},{"value":"Visual inspection (testing)","matchLevel":"none","matchedWords":[]},{"value":"Engine components","matchLevel":"none","matchedWords":[]},{"value":"Defects","matchLevel":"none","matchedWords":[]},{"value":"Reciprocating engines","matchLevel":"none","matchedWords":[]},{"value":"Surface defects","matchLevel":"none","matchedWords":[]},{"value":"Machining tolerances","matchLevel":"none","matchedWords":[]},{"value":"Testing conditions","matchLevel":"none","matchedWords":[]},{"value":"Reciprocating parts","matchLevel":"none","matchedWords":[]},{"value":"Size","matchLevel":"none","matchedWords":[]},{"value":"Piston rings","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"43.060.10 Engine block and internal components","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Automotive","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> ISO 6621-5:2020","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This document specifies quality aspects that can be defined but that are <em>not</em> normally <em>found</em> on a drawing specification. \n   It covers the following: \n   \n     \n       \n         \n           —  single‑piece piston rings of grey cast iron or steel; \n       \n       \n         \n           —  multi‑piece piston rings (oil control rings) consisting of cast iron parts and spring components; and \n       \n       \n         \n           —  single‑piece and multi‑piece oil control rings of steel, i.e. oil control rings in the form of strip steel components or steel segments (rails) with spring expander components. \n       \n     \n   \n   In addition to specifying some of the limits of acceptance relating to inspection measuring principles (covered by ISO 6621‑2), this document also covers those features for which no recognized quantitative measurement procedures exist and which are only checked visually with normal eyesight (glasses if worn normally) and without magnification. Such features (superficial defects) are additional to the standard tolerances of ring width, radial wall thickness and closed gap. \n   This document does <em>not</em> establish acceptable quality levels (AQL), it being left to manufacturer and customer to decide the appropriate levels jointly. In this case, the recommendations of ISO 2859‑1 are followed. \n   This document specifies the quality requirements of piston rings for reciprocating internal combustion engines for road vehicles and other applications. It is applicable to all such rings of a nominal diameter from 30 mm up to and i...","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Leather. Tests for colour fastness. Colour fastness of small samples to solvents","updated_at":"2021-07-09T00:23:08.000Z","meta":{"global":{"status":"Current","publishedDate":"2009-06-30","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Manufacturing Processing & Goods"],"icsCodesAlgoliaStringArray":["59.140.30 Leather and furs"],"descriptorsAlgoliaStringArray":["Dry cleaning","Testing conditions","Chemical-resistance tests","Leather","Chemical cleaning","Solvent-resistance tests","Test specimens","Colour-fastness tests"],"primaryDesignator":"BS EN ISO 11643:2009"},"group_search":{"title":"BS EN ISO 11643:2009","description":"Leather. Tests for colour fastness. Colour fastness of small samples to solvents","price":134,"member_price":67}},"handle":"leather-tests-for-colour-fastness-colour-fastness-of-small-samples-to-solvents","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6897654792357,"_tags":["id:6897654792357"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_330c13e7-7838-474e-be4e-ecb8c36c75fc.png?v=1625790188","created_at":"2021-07-09T00:23:06.000Z","published_at":"2021-07-09T00:23:06.000Z","body_html_safe":" \n   1   Scope \n   This International Standard specifies a method for determining the resistance to solvent solutions of the colour and finish of unused, and not yet cleaned, leather. It does not cover composite materials or complete leather garments. It is not intended to be used to give any guidance on the process to be employed for cleaning garments. \n   During the test, the colour of the leather can change and the adjacent fabric used can become stained. Additionally, the finish of the leather can be damaged. \n   The presence of absorbed water in the leather, adjacent fabric or solvent has not been found to be a critical factor in assessing the colour fastness. \n ","sku":"000000000030160985","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_330c13e7-7838-474e-be4e-ecb8c36c75fc.png?v=1625790188","named_tags":{},"named_tags_names":[],"objectID":"40324232052901","_snippetResult":{"body_html_safe":{"value":"adjacent fabric or solvent has <em>not</em> been <em>found</em> to be","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Leather. Tests for colour fastness. Colour fastness of small samples to solvents","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Manufacturing Processing & Goods","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"59.140.30 Leather and furs","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Dry cleaning","matchLevel":"none","matchedWords":[]},{"value":"Testing conditions","matchLevel":"none","matchedWords":[]},{"value":"Chemical-resistance tests","matchLevel":"none","matchedWords":[]},{"value":"Leather","matchLevel":"none","matchedWords":[]},{"value":"Chemical cleaning","matchLevel":"none","matchedWords":[]},{"value":"Solvent-resistance tests","matchLevel":"none","matchedWords":[]},{"value":"Test specimens","matchLevel":"none","matchedWords":[]},{"value":"Colour-fastness tests","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> EN ISO 11643:2009","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This International Standard specifies a method for determining the resistance to solvent solutions of the colour and finish of unused, and <em>not</em> yet cleaned, leather. It does <em>not</em> cover composite materials or complete leather garments. It is <em>not</em> intended to be used to give any guidance on the process to be employed for cleaning garments. \n   During the test, the colour of the leather can change and the adjacent fabric used can become stained. Additionally, the finish of the leather can be damaged. \n   The presence of absorbed water in the leather, adjacent fabric or solvent has <em>not</em> been <em>found</em> to be a critical factor in assessing the colour fastness. \n ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Internal combustion engines. Piston rings - Quality requirements","updated_at":"2021-07-16T10:38:55.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Force","Pistons","Quality","Visual inspection (testing)","Engine components","Defects","Reciprocating engines","Surface defects","Machining tolerances","Testing conditions","Reciprocating parts","Size","Piston rings"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["43.060.10 Engine block and internal components"],"industriesAlgoliaStringArray":["Automotive"],"publishedDate":"2013-09-30","publisher":"BSI","status":"Withdrawn","statusNumeric":100,"primaryDesignator":"BS ISO 6621-5:2013"},"group_search":{"description":"Internal combustion engines. Piston rings - Quality requirements","member_price":93,"price":186,"title":"BS ISO 6621-5:2013"}},"handle":"internal-combustion-engines-piston-rings-quality-requirements-2","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6915132915877,"_tags":["id:6915132915877","indexing_token:0e08a1816772986fe05be45aeea9fac8"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":186.0,"variants_max_price":186.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_e550324b-789e-49ed-8656-6d1bda9b0ac9.png?v=1626428335","created_at":"2021-07-16T10:38:53.000Z","published_at":"2021-07-16T10:38:53.000Z","body_html_safe":" \n   1   Scope \n   This part of ISO 6621 specifies those quality aspects that are capable of definition but not normally found on a drawing specification. \n   It is applicable to the following: \n   \n     \n       \n         \n           —  single-piece piston rings of grey cast iron or steel; \n       \n       \n         \n           —  multi-piece piston rings (oil control rings) consisting of cast iron parts and spring components; \n       \n       \n         \n           —  single-piece and multi-piece oil control rings of steel, i.e. oil control rings in the form of strip steel components or steel segments (rails) with spring expander components. \n       \n     \n   \n   In addition to specifying certain of the limits of acceptance relating to inspection measuring principles (covered by ISO 6621-2), this part of ISO 6621 also covers those features for which no recognized quantitative measurement procedures exist and which are only checked visually with normal eyesight (spectacles if worn normally) and without magnification. Such features (superficial defects) are additional to the standard tolerances of ring width, radial wall thickness, and closed gap. \n   This part of ISO 6621 does not establish acceptable quality levels (AQL), it being left to manufacturer and client to decide the appropriate levels jointly. In this case, the recommendations of ISO 2859 are followed. \n   This part of ISO 6621 specifies the quality requirements of piston rings for reciprocating internal combustion engines for road vehicles and other applications. It is applicable to all such r...","sku":"000000000030211187","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":186.0,"compare_at_price":93.0,"price_ratio":2.0,"price_range":"150:200","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_e550324b-789e-49ed-8656-6d1bda9b0ac9.png?v=1626428335","named_tags":{},"named_tags_names":[],"objectID":"40375458168997","_snippetResult":{"body_html_safe":{"value":"are capable of definition but <em>not</em> normally <em>found</em> on a","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Internal combustion engines. Piston rings - Quality requirements","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Force","matchLevel":"none","matchedWords":[]},{"value":"Pistons","matchLevel":"none","matchedWords":[]},{"value":"Quality","matchLevel":"none","matchedWords":[]},{"value":"Visual inspection (testing)","matchLevel":"none","matchedWords":[]},{"value":"Engine components","matchLevel":"none","matchedWords":[]},{"value":"Defects","matchLevel":"none","matchedWords":[]},{"value":"Reciprocating engines","matchLevel":"none","matchedWords":[]},{"value":"Surface defects","matchLevel":"none","matchedWords":[]},{"value":"Machining tolerances","matchLevel":"none","matchedWords":[]},{"value":"Testing conditions","matchLevel":"none","matchedWords":[]},{"value":"Reciprocating parts","matchLevel":"none","matchedWords":[]},{"value":"Size","matchLevel":"none","matchedWords":[]},{"value":"Piston rings","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"43.060.10 Engine block and internal components","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Automotive","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Withdrawn","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> ISO 6621-5:2013","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This part of ISO 6621 specifies those quality aspects that are capable of definition but <em>not</em> normally <em>found</em> on a drawing specification. \n   It is applicable to the following: \n   \n     \n       \n         \n           —  single-piece piston rings of grey cast iron or steel; \n       \n       \n         \n           —  multi-piece piston rings (oil control rings) consisting of cast iron parts and spring components; \n       \n       \n         \n           —  single-piece and multi-piece oil control rings of steel, i.e. oil control rings in the form of strip steel components or steel segments (rails) with spring expander components. \n       \n     \n   \n   In addition to specifying certain of the limits of acceptance relating to inspection measuring principles (covered by ISO 6621-2), this part of ISO 6621 also covers those features for which no recognized quantitative measurement procedures exist and which are only checked visually with normal eyesight (spectacles if worn normally) and without magnification. Such features (superficial defects) are additional to the standard tolerances of ring width, radial wall thickness, and closed gap. \n   This part of ISO 6621 does <em>not</em> establish acceptable quality levels (AQL), it being left to manufacturer and client to decide the appropriate levels jointly. In this case, the recommendations of ISO 2859 are followed. \n   This part of ISO 6621 specifies the quality requirements of piston rings for reciprocating internal combustion engines for road vehicles and other applications. It is applicable to all such r...","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Paints and varnishes. Determination of film hardness by pencil test","updated_at":"2021-07-16T10:15:52.000Z","meta":{"global":{"status":"Withdrawn","publishedDate":"2012-11-30","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Manufacturing Processing & Goods"],"icsCodesAlgoliaStringArray":["87.040 Paints and varnishes"],"descriptorsAlgoliaStringArray":["Paints","Test specimens","Testing conditions","Films (states of matter)","Hardness testing","Coatings","Varnishes","Reproducibility","Specimen preparation","Test equipment","Panels"],"statusNumeric":100,"primaryDesignator":"BS EN ISO 15184:2012"},"group_search":{"title":"BS EN ISO 15184:2012","description":"Paints and varnishes. Determination of film hardness by pencil test","price":134,"member_price":67}},"handle":"paints-and-varnishes-determination-of-film-hardness-by-pencil-test-1","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6915221684389,"_tags":["id:6915221684389"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_2b221887-80aa-4193-b52a-df2e89fff022.png?v=1626430552","created_at":"2021-07-16T10:15:49.000Z","published_at":"2021-07-16T10:15:49.000Z","body_html_safe":" \n   1   Scope \n   This International Standard specifies a method for determining the film hardness by pushing pencils of known hardness over the film. \n   The test can be performed on a single coating of a paint, varnish or related product, or on the upper layer of a multi-coat system. \n   This rapid test has not been found to be useful in comparing the  pencil hardness  of different coatings. It is more useful in providing relative ratings for a series of coated panels exhibiting significant differences in  pencil hardness . \n   The method is applicable only to smooth surfaces. \n ","sku":"000000000030217715","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_2b221887-80aa-4193-b52a-df2e89fff022.png?v=1626430552","named_tags":{},"named_tags_names":[],"objectID":"40375728832677","_snippetResult":{"body_html_safe":{"value":"system. \n   This rapid test has <em>not</em> been <em>found</em> to be","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Paints and varnishes. Determination of film hardness by pencil test","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Withdrawn","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Manufacturing Processing & Goods","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"87.040 Paints and varnishes","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Paints","matchLevel":"none","matchedWords":[]},{"value":"Test specimens","matchLevel":"none","matchedWords":[]},{"value":"Testing conditions","matchLevel":"none","matchedWords":[]},{"value":"Films (states of matter)","matchLevel":"none","matchedWords":[]},{"value":"Hardness testing","matchLevel":"none","matchedWords":[]},{"value":"Coatings","matchLevel":"none","matchedWords":[]},{"value":"Varnishes","matchLevel":"none","matchedWords":[]},{"value":"Reproducibility","matchLevel":"none","matchedWords":[]},{"value":"Specimen preparation","matchLevel":"none","matchedWords":[]},{"value":"Test equipment","matchLevel":"none","matchedWords":[]},{"value":"Panels","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> EN ISO 15184:2012","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This International Standard specifies a method for determining the film hardness by pushing pencils of known hardness over the film. \n   The test can be performed on a single coating of a paint, varnish or related product, or on the upper layer of a multi-coat system. \n   This rapid test has <em>not</em> been <em>found</em> to be useful in comparing the  pencil hardness  of different coatings. It is more useful in providing relative ratings for a series of coated panels exhibiting significant differences in  pencil hardness . \n   The method is applicable only to smooth surfaces. \n ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Code of practice for the installation of audio visual equipment","updated_at":"2021-07-09T14:07:49.000Z","meta":{"global":{"status":"Current","publishedDate":"2014-01-31","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["ICT & Telecommunications"],"icsCodesAlgoliaStringArray":["33.060.40 Cabled distribution systems","33.160.01 Audio, video and audiovisual systems in general"],"descriptorsAlgoliaStringArray":["Installation","Projectors (image)","Teaching aids","Display devices (computers)","Plasma displays","Audiovisual materials"],"statusNumeric":300,"primaryDesignator":"BS 8590:2014"},"group_search":{"title":"BS 8590:2014","description":"Code of practice for the installation of audio visual equipment","price":134,"member_price":67}},"handle":"code-of-practice-for-the-installation-of-audio-visual-equipment","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6899083477157,"_tags":["id:6899083477157"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_4c1d3321-7bd5-478d-97e6-5f8a1572380e.png?v=1625839668","created_at":"2021-07-09T14:07:46.000Z","published_at":"2021-07-09T14:07:46.000Z","body_html_safe":" \n   1   Scope \n   This British Standard gives recommendations for the installation of  audio  visual (AV) systems and  equipment  at site survey, design, installation and commissioning stages. \n   \n     \n       NOTE  Information on installing sound systems can be found in BS 6259. Information on installing induction loop systems can be found in BS 7594. \n   \n   It does not give recommendations for the training of installation technicians. It does not cover the specification of individual components nor their performance as an installed system. \n   It is applicable to installations including a significant AV component, such as, but not limited to, computers, projectors, whiteboards, large format displays, monitors, loudspeakers (both wall and ceiling mounted) and light arrays. \n ","sku":"000000000030264277","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_4c1d3321-7bd5-478d-97e6-5f8a1572380e.png?v=1625839668","named_tags":{},"named_tags_names":[],"objectID":"40327521894565","_snippetResult":{"body_html_safe":{"value":"systems can be <em>found</em> in <em>BS</em> 7594. \n   \n   It does <em>not</em>","matchLevel":"full"}},"_highlightResult":{"title":{"value":"Code of practice for the installation of audio visual equipment","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"ICT & Telecommunications","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"33.060.40 Cabled distribution systems","matchLevel":"none","matchedWords":[]},{"value":"33.160.01 Audio, video and audiovisual systems in general","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Installation","matchLevel":"none","matchedWords":[]},{"value":"Projectors (image)","matchLevel":"none","matchedWords":[]},{"value":"Teaching aids","matchLevel":"none","matchedWords":[]},{"value":"Display devices (computers)","matchLevel":"none","matchedWords":[]},{"value":"Plasma displays","matchLevel":"none","matchedWords":[]},{"value":"Audiovisual materials","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> 8590:2014","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This British Standard gives recommendations for the installation of  audio  visual (AV) systems and  equipment  at site survey, design, installation and commissioning stages. \n   \n     \n       NOTE  Information on installing sound systems can be <em>found</em> in <em>BS</em> 6259. Information on installing induction loop systems can be <em>found</em> in <em>BS</em> 7594. \n   \n   It does <em>not</em> give recommendations for the training of installation technicians. It does <em>not</em> cover the specification of individual components nor their performance as an installed system. \n   It is applicable to installations including a significant AV component, such as, but <em>not</em> limited to, computers, projectors, whiteboards, large format displays, monitors, loudspeakers (both wall and ceiling mounted) and light arrays. \n ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Metallic coatings. Porosity tests. Porosity in gold or palladium coatings by sulfurous acid/sulfur dioxide vapour","updated_at":"2021-07-12T22:20:39.000Z","meta":{"global":{"status":"Current","publishedDate":"2001-07-15","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Manufacturing Processing & Goods"],"icsCodesAlgoliaStringArray":["25.220.40 Metallic coatings"],"descriptorsAlgoliaStringArray":["Porosity testing","Coatings","Electric connectors","Corrosion","Palladium","Electric contacts","Sulfurous acid","Electrodeposition","Gold","Sulfur dioxide","Metal coatings"],"statusNumeric":300,"primaryDesignator":"BS EN ISO 15721:2001"},"group_search":{"title":"BS EN ISO 15721:2001","description":"Metallic coatings. Porosity tests. Porosity in gold or palladium coatings by sulfurous acid/sulfur dioxide vapour","price":134,"member_price":67}},"handle":"metallic-coatings-porosity-tests-porosity-in-gold-or-palladium-coatings-by-sulfurous-acid-sulfur-dioxide-vapour","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6904547999909,"_tags":["id:6904547999909"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_026131f0-3c1a-40d3-a42d-5f3868ec8039.png?v=1626128439","created_at":"2021-07-12T22:20:37.000Z","published_at":"2021-07-12T22:20:36.000Z","body_html_safe":" \n   1   Scope \n   This test method covers equipment and methods for determining the  porosity  of gold or palladium coatings, particularly electrodeposits and clad metals used on electrical contacts. \n   It is designed to show whether the  porosity  level is less than or greater than a given value which by experience is considered by the user to be acceptable for the intended application. \n   This  porosity  test involves corrosion reactions in which the products delineate defect sites in coatings. Since the chemistry and properties of these products may not resemble those found in natural or service environments this test cannot be recommended for the prediction of the electrical performance of contacts unless correlation is first established with service experience. \n   This test is intended to be used for quantitative descriptions of  porosity  (such as number of pores per unit area or per contact) on coatings that have a sufficiently low pore density so that the corrosion sites are well separated and can be readily resolved. As a general guideline this can be achieved for pore densities up to about 100/cm 2 . Above this value the tests are useful for the qualitative detection and comparisons of  porosity . \n   A variety of other  porosity  testing methods are described in the literature  [5],[6] . Other ISO  porosity  test methods are described ISO 10308, ISO 12687, ISO 14647 and ISO 15720. \n ","sku":"000000000030047176","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_026131f0-3c1a-40d3-a42d-5f3868ec8039.png?v=1626128439","named_tags":{},"named_tags_names":[],"objectID":"40346280755365","_snippetResult":{"body_html_safe":{"value":"properties of these products may <em>not</em> resemble those <em>found</em> in","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Metallic coatings. Porosity tests. Porosity in gold or palladium coatings by sulfurous acid/sulfur dioxide vapour","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Manufacturing Processing & Goods","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"25.220.40 Metallic coatings","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Porosity testing","matchLevel":"none","matchedWords":[]},{"value":"Coatings","matchLevel":"none","matchedWords":[]},{"value":"Electric connectors","matchLevel":"none","matchedWords":[]},{"value":"Corrosion","matchLevel":"none","matchedWords":[]},{"value":"Palladium","matchLevel":"none","matchedWords":[]},{"value":"Electric contacts","matchLevel":"none","matchedWords":[]},{"value":"Sulfurous acid","matchLevel":"none","matchedWords":[]},{"value":"Electrodeposition","matchLevel":"none","matchedWords":[]},{"value":"Gold","matchLevel":"none","matchedWords":[]},{"value":"Sulfur dioxide","matchLevel":"none","matchedWords":[]},{"value":"Metal coatings","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> EN ISO 15721:2001","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This test method covers equipment and methods for determining the  porosity  of gold or palladium coatings, particularly electrodeposits and clad metals used on electrical contacts. \n   It is designed to show whether the  porosity  level is less than or greater than a given value which by experience is considered by the user to be acceptable for the intended application. \n   This  porosity  test involves corrosion reactions in which the products delineate defect sites in coatings. Since the chemistry and properties of these products may <em>not</em> resemble those <em>found</em> in natural or service environments this test cannot be recommended for the prediction of the electrical performance of contacts unless correlation is first established with service experience. \n   This test is intended to be used for quantitative descriptions of  porosity  (such as number of pores per unit area or per contact) on coatings that have a sufficiently low pore density so that the corrosion sites are well separated and can be readily resolved. As a general guideline this can be achieved for pore densities up to about 100/cm 2 . Above this value the tests are useful for the qualitative detection and comparisons of  porosity . \n   A variety of other  porosity  testing methods are described in the literature  [5],[6] . Other ISO  porosity  test methods are described ISO 10308, ISO 12687, ISO 14647 and ISO 15720. \n ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Orthopaedic implants - Recommendations for care and handling","updated_at":"2021-07-07T23:10:29.000Z","meta":{"global":{"status":"Current","publishedDate":"1990-08-31","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Healthcare & Medical Devices"],"icsCodesAlgoliaStringArray":["11.040.40 Implants for surgery, prosthetics and orthotics"],"descriptorsAlgoliaStringArray":["Plastics","Medical equipment","Implants (surgical)","Storage","Cleaning","Orthopaedics","Polymers","Surgical equipment","Ceramics","Materials handling","Acrylic resins","Sterile equipment","Metals","Adhesives","Orthopaedic equipment"],"statusNumeric":300,"primaryDesignator":"BS 7254-3:1990"},"group_search":{"title":"BS 7254-3:1990","description":"Orthopaedic implants - Recommendations for care and handling","price":112,"member_price":56}},"handle":"orthopaedic-implants-recommendations-for-care-and-handling","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6895017394341,"_tags":["id:6895017394341"],"tags":["format:digital","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":112.0,"variants_max_price":112.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_94c407a3-98c5-4fff-ad9d-535178bbdcae.png?v=1625699429","created_at":"2021-07-07T23:10:26.000Z","published_at":"2021-07-07T23:10:26.000Z","body_html_safe":" \n   1   Scope \n   This Part of BS 7254 gives recommendations for the care and handling of orthopaedic surgical implants made of metal, ceramic or polymeric material, and also acrylic resin cement (used for the fixation of certain implants). \n   The recommendations in this Part of BS 7254 do not apply to the care and handling of orthopaedic or other surgical instruments. \n   \n     \n       NOTE 1.  Handling and packaging procedures for the implant manufacturer are not included, but may be found in the appropriate Parts of BS 3531, BS 7251 or BS 7253. \n   \n   \n     \n       NOTE 2.  The titles of the publications referred to in this Part of BS 7254 are listed here. \n   \n ","sku":"000000000000220370","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":112.0,"compare_at_price":56.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_94c407a3-98c5-4fff-ad9d-535178bbdcae.png?v=1625699429","named_tags":{},"named_tags_names":[],"objectID":"40315599093925","_snippetResult":{"body_html_safe":{"value":"recommendations in this Part of <em>BS</em> 7254 do <em>not</em> apply","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Orthopaedic implants - Recommendations for care and handling","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Healthcare & Medical Devices","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"11.040.40 Implants for surgery, prosthetics and orthotics","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Plastics","matchLevel":"none","matchedWords":[]},{"value":"Medical equipment","matchLevel":"none","matchedWords":[]},{"value":"Implants (surgical)","matchLevel":"none","matchedWords":[]},{"value":"Storage","matchLevel":"none","matchedWords":[]},{"value":"Cleaning","matchLevel":"none","matchedWords":[]},{"value":"Orthopaedics","matchLevel":"none","matchedWords":[]},{"value":"Polymers","matchLevel":"none","matchedWords":[]},{"value":"Surgical equipment","matchLevel":"none","matchedWords":[]},{"value":"Ceramics","matchLevel":"none","matchedWords":[]},{"value":"Materials handling","matchLevel":"none","matchedWords":[]},{"value":"Acrylic resins","matchLevel":"none","matchedWords":[]},{"value":"Sterile equipment","matchLevel":"none","matchedWords":[]},{"value":"Metals","matchLevel":"none","matchedWords":[]},{"value":"Adhesives","matchLevel":"none","matchedWords":[]},{"value":"Orthopaedic equipment","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> 7254-3:1990","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This Part of <em>BS</em> 7254 gives recommendations for the care and handling of orthopaedic surgical implants made of metal, ceramic or polymeric material, and also acrylic resin cement (used for the fixation of certain implants). \n   The recommendations in this Part of <em>BS</em> 7254 do <em>not</em> apply to the care and handling of orthopaedic or other surgical instruments. \n   \n     \n       NOTE 1.  Handling and packaging procedures for the implant manufacturer are <em>not</em> included, but may be <em>found</em> in the appropriate Parts of <em>BS</em> 3531, <em>BS</em> 7251 or <em>BS</em> 7253. \n   \n   \n     \n       NOTE 2.  The titles of the publications referred to in this Part of <em>BS</em> 7254 are listed here. \n   \n ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Thermal insulation products for building equipment and industrialinstallations. Factory made mineral wool (MW) products. Specification","updated_at":"2021-07-07T02:01:37.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Marking","Construction materials","Buildings","Thermal conductivity","Mats","Boards","Quality control","Designations","Slabs","Industrial","Pipes","Thermal testing","Dimensional tolerances","Mineral wool","Strength of materials","Thermal resistance","Thermal insulating materials","Rolls","Conformity","Thermal insulation"],"designatedStandard":"true","icsCodesAlgoliaStringArray":["91.100.60 Thermal and sound insulating materials"],"industriesAlgoliaStringArray":["Construction & Building"],"publishedDate":"2010-01-31","publisher":"BSI","status":"Withdrawn","statusNumeric":100,"primaryDesignator":"BS EN 14303:2009+A1:2013"},"group_search":{"description":"Thermal insulation products for building equipment and industrialinstallations. Factory made mineral wool (MW) products. Specification","member_price":109,"price":218,"title":"BS EN 14303:2009+A1:2013"}},"handle":"thermal-insulation-products-for-building-equipment-and-industrialinstallations-factory-made-mineral-wool-mw-products-specification","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892244140197,"_tags":["id:6892244140197","indexing_token:cfa4c7d85db0c9b360a44276078d3097"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":218.0,"variants_max_price":218.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_0ce92a7d-6e53-47c0-86bc-52d0a9df4852.png?v=1625619697","created_at":"2021-07-07T02:01:35.000Z","published_at":"2021-07-07T02:01:35.000Z","body_html_safe":"  BS EN 14303:2009 Thermal insulation products for building equipment and industrial installations. Factory made mineral wool products (MW). Specification   \r\n BS EN 14303 specifies the requirements for factory made mineral wool products, which are used for the thermal insulation of building equipment and industrial installations with an operating temperature range of approximately 0 °C to + 800 °C. \r\n Below an operating temperature of ambient, special means against water vapour diffusion and water accumulation by air flow might be required. Below an operating temperature of - 50 °C, special tests regarding the suitability of the products in the intended application are advised (e.g. liquefaction of oxygen). Manufacturer's advice should be heeded in all cases. \r\n The products are manufactured with or without facings or coatings, in the form of rolls, boards, slabs, mats, felts, quilts, wired mats, lamella mats, bevelled lags and pipe sections. \r\n BS EN 14303 describes product characteristics and includes procedures for testing, evaluation of conformity, marking and labelling. \r\n Products covered by this BS EN 14303 are also used in prefabricated thermal insulation systems and composite panels; the performance of systems incorporating these products is not covered. \r\n BS EN 14303 does not specify the required level of a given property that shall be achieved by a product to demonstrate fitness for purpose in a particular application. The levels required for a given application can be found in regulations and invitations to tender. \r\n Products with a declared thermal conductivity greater than 0,065 W/(m•K) at 10 °C are not covered by BS EN 14303. \r\n BS EN 14303 does not cover products for in situ insulation (blowing or pouring) or products for the insulation of the building structure. \r\n BS EN 14303 does not cover the following acoustical aspects: direct airborne sound insulation and impact noise transmissio...","sku":"000000000030259681","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":218.0,"compare_at_price":109.0,"price_ratio":2.0,"price_range":"200:250","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_0ce92a7d-6e53-47c0-86bc-52d0a9df4852.png?v=1625619697","named_tags":{},"named_tags_names":[],"objectID":"40309224898725","_snippetResult":{"body_html_safe":{"value":"these products is <em>not</em> covered. \r\n <em>BS</em> EN 14303 does <em>not</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Thermal insulation products for building equipment and industrialinstallations. Factory made mineral wool (MW) products. Specification","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Marking","matchLevel":"none","matchedWords":[]},{"value":"Construction materials","matchLevel":"none","matchedWords":[]},{"value":"Buildings","matchLevel":"none","matchedWords":[]},{"value":"Thermal conductivity","matchLevel":"none","matchedWords":[]},{"value":"Mats","matchLevel":"none","matchedWords":[]},{"value":"Boards","matchLevel":"none","matchedWords":[]},{"value":"Quality control","matchLevel":"none","matchedWords":[]},{"value":"Designations","matchLevel":"none","matchedWords":[]},{"value":"Slabs","matchLevel":"none","matchedWords":[]},{"value":"Industrial","matchLevel":"none","matchedWords":[]},{"value":"Pipes","matchLevel":"none","matchedWords":[]},{"value":"Thermal testing","matchLevel":"none","matchedWords":[]},{"value":"Dimensional tolerances","matchLevel":"none","matchedWords":[]},{"value":"Mineral wool","matchLevel":"none","matchedWords":[]},{"value":"Strength of materials","matchLevel":"none","matchedWords":[]},{"value":"Thermal resistance","matchLevel":"none","matchedWords":[]},{"value":"Thermal insulating materials","matchLevel":"none","matchedWords":[]},{"value":"Rolls","matchLevel":"none","matchedWords":[]},{"value":"Conformity","matchLevel":"none","matchedWords":[]},{"value":"Thermal insulation","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"91.100.60 Thermal and sound insulating materials","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Construction & Building","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Withdrawn","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN 14303:2009+A1:2013","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  <em>BS</em> EN 14303:2009 Thermal insulation products for building equipment and industrial installations. Factory made mineral wool products (MW). Specification   \r\n <em>BS</em> EN 14303 specifies the requirements for factory made mineral wool products, which are used for the thermal insulation of building equipment and industrial installations with an operating temperature range of approximately 0 °C to + 800 °C. \r\n Below an operating temperature of ambient, special means against water vapour diffusion and water accumulation by air flow might be required. Below an operating temperature of - 50 °C, special tests regarding the suitability of the products in the intended application are advised (e.g. liquefaction of oxygen). Manufacturer's advice should be heeded in all cases. \r\n The products are manufactured with or without facings or coatings, in the form of rolls, boards, slabs, mats, felts, quilts, wired mats, lamella mats, bevelled lags and pipe sections. \r\n <em>BS</em> EN 14303 describes product characteristics and includes procedures for testing, evaluation of conformity, marking and labelling. \r\n Products covered by this <em>BS</em> EN 14303 are also used in prefabricated thermal insulation systems and composite panels; the performance of systems incorporating these products is <em>not</em> covered. \r\n <em>BS</em> EN 14303 does <em>not</em> specify the required level of a given property that shall be achieved by a product to demonstrate fitness for purpose in a particular application. The levels required for a given application can be <em>found</em> in regulations and invitations to tender. \r\n Products with a declared thermal conductivity greater than 0,065 W/(m•K) at 10 °C are <em>not</em> covered by <em>BS</em> EN 14303. \r\n <em>BS</em> EN 14303 does <em>not</em> cover products for in situ insulation (blowing or pouring) or products for the insulation of the building structure. \r\n <em>BS</em> EN 14303 does <em>not</em> cover the following acoustical aspects: direct airborne sound insulation and impact noise transmissio...","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Thermal insulation products for buildings. Factory made products of extruded polystyrene foam (XPS). Specification","updated_at":"2021-07-07T07:45:43.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Marking","Buildings","Thermal insulation","Thermal resistance","Polystyrene","Conformity","Boards","Construction materials","Quality control","Thermoplastic polymers","Foamed plastics","Foams","Thermal insulating materials","Thermal properties of materials","Insulating boards","Thermal testing","Thermal conductivity"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["91.100.60 Thermal and sound insulating materials"],"industriesAlgoliaStringArray":["Construction & Building"],"publishedDate":"2009-06-30","publisher":"BSI","status":"Withdrawn","statusNumeric":100,"primaryDesignator":"BS EN 13164:2008"},"group_search":{"description":"Thermal insulation products for buildings. Factory made products of extruded polystyrene foam (XPS). Specification","member_price":123,"price":246,"title":"BS EN 13164:2008"}},"handle":"thermal-insulation-products-for-buildings-factory-made-products-of-extruded-polystyrene-foam-xps-specification","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892901433509,"_tags":["id:6892901433509","indexing_token:c268430a4c0ad4c39e9ce93af4ea9198"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":246.0,"variants_max_price":246.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_0a82a5d9-c103-4d1f-8d3c-b4422b9d745a.png?v=1625640343","created_at":"2021-07-07T07:45:41.000Z","published_at":"2021-07-07T07:45:40.000Z","body_html_safe":"  BS EN 13164:2008 Thermal insulation products for buildings. Factory made products of extruded polystyrene foam (XPS). Specification  \r\n BS EN 13164 specifies the requirements for factory made products of extruded polystyrene foam, with or without facings or coatings, which are used for thermal insulation of buildings. The products are manufactured in the form of boards, which are also available with special edge and surface treatment (tongue and grooves, shiplap, etc.). \r\n BS EN 13164 specifies product characteristics and includes procedures for testing, evaluation of conformity, marking and labelling. \r\n Products covered by BS EN 13164 are also used in prefabricated thermal insulating systems and composite panels; the performance of systems incorporating these products is not covered. BS EN 13164 also covers multilayered insulation boards. \r\n It does not specify the required level of a given property to be achieved by a product to demonstrate fitness for purpose in a particular application. The levels required for a given application are to be found in regulations or non-conflicting standards. \r\n Products with a declared thermal resistance lower than 0,25 m2⋅K/W or a declared thermal conductivity greater than 0,060 W/(m-K) at 10 °C are not covered by BS EN 13164. \r\n BS EN 13164 does not cover in situ insulation products and products intended to be used for the insulation of building equipment and industrial installations or products intended for acoustic insulation. \r\n  Contents of BS EN 13164:  \r\n \r\n Foreword  \r\n Scope  \r\n Normative references  \r\n Terms, definitions, symbols, units, abbreviated terms  \r\n Terms and definitions  \r\n Symbols, units and abbreviated terms  \r\n Requirements  \r\n General  \r\n For all applications  \r\n For specific applications  \r\n Test methods  \r\n Sampling  \r\n Conditioning  \r\n<li...","sku":"000000000030169538","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":246.0,"compare_at_price":123.0,"price_ratio":2.0,"price_range":"200:250","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_0a82a5d9-c103-4d1f-8d3c-b4422b9d745a.png?v=1625640343","named_tags":{},"named_tags_names":[],"objectID":"40310725673125","_snippetResult":{"body_html_safe":{"value":"°C are <em>not</em> covered by <em>BS</em> EN 13164. \r\n <em>BS</em> EN","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Thermal insulation products for buildings. Factory made products of extruded polystyrene foam (XPS). Specification","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Marking","matchLevel":"none","matchedWords":[]},{"value":"Buildings","matchLevel":"none","matchedWords":[]},{"value":"Thermal insulation","matchLevel":"none","matchedWords":[]},{"value":"Thermal resistance","matchLevel":"none","matchedWords":[]},{"value":"Polystyrene","matchLevel":"none","matchedWords":[]},{"value":"Conformity","matchLevel":"none","matchedWords":[]},{"value":"Boards","matchLevel":"none","matchedWords":[]},{"value":"Construction materials","matchLevel":"none","matchedWords":[]},{"value":"Quality control","matchLevel":"none","matchedWords":[]},{"value":"Thermoplastic polymers","matchLevel":"none","matchedWords":[]},{"value":"Foamed plastics","matchLevel":"none","matchedWords":[]},{"value":"Foams","matchLevel":"none","matchedWords":[]},{"value":"Thermal insulating materials","matchLevel":"none","matchedWords":[]},{"value":"Thermal properties of materials","matchLevel":"none","matchedWords":[]},{"value":"Insulating boards","matchLevel":"none","matchedWords":[]},{"value":"Thermal testing","matchLevel":"none","matchedWords":[]},{"value":"Thermal conductivity","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"91.100.60 Thermal and sound insulating materials","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Construction & Building","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Withdrawn","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN 13164:2008","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  <em>BS</em> EN 13164:2008 Thermal insulation products for buildings. Factory made products of extruded polystyrene foam (XPS). Specification  \r\n <em>BS</em> EN 13164 specifies the requirements for factory made products of extruded polystyrene foam, with or without facings or coatings, which are used for thermal insulation of buildings. The products are manufactured in the form of boards, which are also available with special edge and surface treatment (tongue and grooves, shiplap, etc.). \r\n <em>BS</em> EN 13164 specifies product characteristics and includes procedures for testing, evaluation of conformity, marking and labelling. \r\n Products covered by <em>BS</em> EN 13164 are also used in prefabricated thermal insulating systems and composite panels; the performance of systems incorporating these products is <em>not</em> covered. <em>BS</em> EN 13164 also covers multilayered insulation boards. \r\n It does <em>not</em> specify the required level of a given property to be achieved by a product to demonstrate fitness for purpose in a particular application. The levels required for a given application are to be <em>found</em> in regulations or non-conflicting standards. \r\n Products with a declared thermal resistance lower than 0,25 m2⋅K/W or a declared thermal conductivity greater than 0,060 W/(m-K) at 10 °C are <em>not</em> covered by <em>BS</em> EN 13164. \r\n <em>BS</em> EN 13164 does <em>not</em> cover in situ insulation products and products intended to be used for the insulation of building equipment and industrial installations or products intended for acoustic insulation. \r\n  Contents of <em>BS</em> EN 13164:  \r\n \r\n Foreword  \r\n Scope  \r\n Normative references  \r\n Terms, definitions, symbols, units, abbreviated terms  \r\n Terms and definitions  \r\n Symbols, units and abbreviated terms  \r\n Requirements  \r\n General  \r\n For all applications  \r\n For specific applications  \r\n Test methods  \r\n Sampling  \r\n Conditioning  \r\n<li...","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Safety requirements for electrical equipment for measurement, control, and laboratory use. Particular requirements for equipment intended to be used in educational establishments by children","updated_at":"2021-07-20T03:47:53.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Educational facilities","Construction works","Safety devices","Health and safety requirements","Safety requirements","Electrical safety requirements","Electrical equipment","Intrinsically-safe electrical equipment"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["19.080 Electrical and electronic testing","29.100.01 Components for electrical equipment in general"],"industriesAlgoliaStringArray":["Electrical & Electronic"],"publishedDate":"2021-06-30","publisher":"BSI","status":"Current","statusNumeric":300,"primaryDesignator":"BS EN IEC 61010-2-130:2021"},"group_search":{"description":"Safety requirements for electrical equipment for measurement, control, and laboratory use. Particular requirements for equipment intended to be used in educational establishments by children","member_price":109,"price":218,"title":"BS EN IEC 61010-2-130:2021"}},"handle":"safety-requirements-for-electrical-equipment-for-measurement-control-and-laboratory-use-particular-requirements-for-equipment-intended-to-be-used-in-educational-establishments-by-children","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6919757267109,"_tags":["id:6919757267109","indexing_token:10f777925e2f0eb17082f7b60d747a26"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680","Ingestion-build-48068"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":218.0,"variants_max_price":218.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_202e5b6c-f309-44f6-8366-ac730fa77077.png?v=1626653952","created_at":"2021-07-19T01:19:10.000Z","published_at":"2021-07-19T01:19:10.000Z","body_html_safe":" \n   1   Scope and object \n   This clause of Part 1 is applicable except as follows: \n   \n     1.1.1   Equipment included in scope \n     \n       Deletion: Delete paragraph 1. \n     \n     \n       Replacement: \n     \n     \n       Replace the second paragraph immediately before the lettered list, with the following: \n     \n     This part of IEC 61010 specifies particular safety requirements for the following types of equipment a), b) or c) and their accessories intended to be used in educational establishments by children under the supervision of the  responsible body . It specifies general safety requirements for equipment intended to be used in educational establishments by persons between the age of 3 years and the age of 16 years under the supervision of a  responsible body . \n     Children are considered as persons between the age of 3 years and 16 years. \n     It is recognized that pupils with additional educational or physical support needs may have needs beyond the level addressed in this document (see Clause 17 risk assessment). \n     \n       \n         NOTE 1  The term \"children\" used in this document does not match the definitions found in ISO/IEC Guide 50 and other documents. \n     \n     It is possible that all or part of the equipment falls within the scope of one or more IEC 61010 Part 2 standards as well as within the scope of this document. In that case the requirements of those other Part 2 standards apply. \n ...","sku":"000000000030363478","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":218.0,"compare_at_price":109.0,"price_ratio":2.0,"price_range":"200:250","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_202e5b6c-f309-44f6-8366-ac730fa77077.png?v=1626653952","named_tags":{},"named_tags_names":[],"objectID":"40390366855333","_snippetResult":{"body_html_safe":{"value":"used in this document does <em>not</em> match the definitions <em>found</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Safety requirements for electrical equipment for measurement, control, and laboratory use. Particular requirements for equipment intended to be used in educational establishments by children","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Educational facilities","matchLevel":"none","matchedWords":[]},{"value":"Construction works","matchLevel":"none","matchedWords":[]},{"value":"Safety devices","matchLevel":"none","matchedWords":[]},{"value":"Health and safety requirements","matchLevel":"none","matchedWords":[]},{"value":"Safety requirements","matchLevel":"none","matchedWords":[]},{"value":"Electrical safety requirements","matchLevel":"none","matchedWords":[]},{"value":"Electrical equipment","matchLevel":"none","matchedWords":[]},{"value":"Intrinsically-safe electrical equipment","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"19.080 Electrical and electronic testing","matchLevel":"none","matchedWords":[]},{"value":"29.100.01 Components for electrical equipment in general","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Electrical & Electronic","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN IEC 61010-2-130:2021","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope and object \n   This clause of Part 1 is applicable except as follows: \n   \n     1.1.1   Equipment included in scope \n     \n       Deletion: Delete paragraph 1. \n     \n     \n       Replacement: \n     \n     \n       Replace the second paragraph immediately before the lettered list, with the following: \n     \n     This part of IEC 61010 specifies particular safety requirements for the following types of equipment a), b) or c) and their accessories intended to be used in educational establishments by children under the supervision of the  responsible body . It specifies general safety requirements for equipment intended to be used in educational establishments by persons between the age of 3 years and the age of 16 years under the supervision of a  responsible body . \n     Children are considered as persons between the age of 3 years and 16 years. \n     It is recognized that pupils with additional educational or physical support needs may have needs beyond the level addressed in this document (see Clause 17 risk assessment). \n     \n       \n         NOTE 1  The term \"children\" used in this document does <em>not</em> match the definitions <em>found</em> in ISO/IEC Guide 50 and other documents. \n     \n     It is possible that all or part of the equipment falls within the scope of one or more IEC 61010 Part 2 standards as well as within the scope of this document. In that case the requirements of those other Part 2 standards apply. \n ...","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Protective clothing for firefighters. Performance requirements for protective clothing for technical rescue","updated_at":"2021-07-09T18:38:00.000Z","meta":{"global":{"status":"Current","publishedDate":"2017-04-30","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Healthcare & Medical Devices"],"icsCodesAlgoliaStringArray":["13.340.10 Protective clothing"],"descriptorsAlgoliaStringArray":["Firefighting organizations","Firefighting personnel","Firefighting","Visibility","Wear resistance","Tear strength","Tensile strength","Marking","Linings (clothing)","Cleaning","Clothing","Ageing (materials)","Rescue","Firemens uniforms","Protective clothing"],"statusNumeric":300,"primaryDesignator":"BS EN 16689:2017"},"group_search":{"title":"BS EN 16689:2017","description":"Protective clothing for firefighters. Performance requirements for protective clothing for technical rescue","price":186,"member_price":93}},"handle":"protective-clothing-for-firefighters-performance-requirements-for-protective-clothing-for-technical-rescue","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6899501301925,"_tags":["id:6899501301925"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":186.0,"variants_max_price":186.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_b504d7c4-dc3f-48fb-a32a-710f817cd8fc.png?v=1625855880","created_at":"2021-07-09T18:37:57.000Z","published_at":"2021-07-09T18:37:57.000Z","body_html_safe":" \n   1   Scope \n   This European Standard specifies the minimum requirements for technical rescue clothing. \n   Technical rescues involves work associated with the environments, and conditions associated with operational scenarios such as but not limited to those found during road traffic collisions and when working in and around collapsed structures often for extended periods of time after natural disasters (earthquake, landslides, etc.) where protection against mechanical risks, limited heat and flame and conspicuity is needed. \n   \n     \n       NOTE  This could involve heavy workloads, working in confined spaces and require conspicuity in public places. \n   \n   This European Standard covers the general clothing design, the minimum performance levels of the  material  used, the methods of test to be used to determine these performance levels, and marking and information supplied by the manufacturer. \n   Unless combined with other specialized PPE and tested accordingly this standard is not applicable to clothing used to protect against risks encountered in fighting fires, wildland fires or rescue from fire, dealing with hazardous chemicals, working with chainsaws and water and rope rescue. \n   This European Standard does not cover protection for the head, hands and feet or protection against other hazards e.g. chemical, radiological and electrical hazards. These aspects are covered in other European Standards. \n ","sku":"000000000030284838","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":186.0,"compare_at_price":93.0,"price_ratio":2.0,"price_range":"150:200","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_b504d7c4-dc3f-48fb-a32a-710f817cd8fc.png?v=1625855880","named_tags":{},"named_tags_names":[],"objectID":"40328836219045","_snippetResult":{"body_html_safe":{"value":"operational scenarios such as but <em>not</em> limited to those <em>found</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Protective clothing for firefighters. Performance requirements for protective clothing for technical rescue","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Healthcare & Medical Devices","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"13.340.10 Protective clothing","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Firefighting organizations","matchLevel":"none","matchedWords":[]},{"value":"Firefighting personnel","matchLevel":"none","matchedWords":[]},{"value":"Firefighting","matchLevel":"none","matchedWords":[]},{"value":"Visibility","matchLevel":"none","matchedWords":[]},{"value":"Wear resistance","matchLevel":"none","matchedWords":[]},{"value":"Tear strength","matchLevel":"none","matchedWords":[]},{"value":"Tensile strength","matchLevel":"none","matchedWords":[]},{"value":"Marking","matchLevel":"none","matchedWords":[]},{"value":"Linings (clothing)","matchLevel":"none","matchedWords":[]},{"value":"Cleaning","matchLevel":"none","matchedWords":[]},{"value":"Clothing","matchLevel":"none","matchedWords":[]},{"value":"Ageing (materials)","matchLevel":"none","matchedWords":[]},{"value":"Rescue","matchLevel":"none","matchedWords":[]},{"value":"Firemens uniforms","matchLevel":"none","matchedWords":[]},{"value":"Protective clothing","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> EN 16689:2017","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This European Standard specifies the minimum requirements for technical rescue clothing. \n   Technical rescues involves work associated with the environments, and conditions associated with operational scenarios such as but <em>not</em> limited to those <em>found</em> during road traffic collisions and when working in and around collapsed structures often for extended periods of time after natural disasters (earthquake, landslides, etc.) where protection against mechanical risks, limited heat and flame and conspicuity is needed. \n   \n     \n       NOTE  This could involve heavy workloads, working in confined spaces and require conspicuity in public places. \n   \n   This European Standard covers the general clothing design, the minimum performance levels of the  material  used, the methods of test to be used to determine these performance levels, and marking and information supplied by the manufacturer. \n   Unless combined with other specialized PPE and tested accordingly this standard is <em>not</em> applicable to clothing used to protect against risks encountered in fighting fires, wildland fires or rescue from fire, dealing with hazardous chemicals, working with chainsaws and water and rope rescue. \n   This European Standard does <em>not</em> cover protection for the head, hands and feet or protection against other hazards e.g. chemical, radiological and electrical hazards. These aspects are covered in other European Standards. \n ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Firefighters helmets. Helmets for technical rescue","updated_at":"2021-07-09T14:20:31.000Z","meta":{"global":{"status":"Current","publishedDate":"2014-12-31","publisher":"BSI","designatedStandard":"true","industriesAlgoliaStringArray":["Healthcare & Medical Devices"],"icsCodesAlgoliaStringArray":["13.340.20 Head protective equipment"],"descriptorsAlgoliaStringArray":["Dimensions","Preferred sizes","Headforms","Mass","Test models","Test methods","Size coding","Test equipment","Coordinates (mathematics)","Marking","Size","Helmets (protective)"],"statusNumeric":300,"primaryDesignator":"BS EN 16473:2014"},"group_search":{"title":"BS EN 16473:2014","description":"Firefighters helmets. Helmets for technical rescue","price":186,"member_price":93}},"handle":"firefighters-helmets-helmets-for-technical-rescue","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6899110838437,"_tags":["id:6899110838437"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":186.0,"variants_max_price":186.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_73cd0b88-d5ab-4789-b9da-2a3fac3a62cc.png?v=1625840431","created_at":"2021-07-09T14:20:28.000Z","published_at":"2021-07-09T14:20:27.000Z","body_html_safe":" \n   1   Scope \n   This European Standard specifies the minimum requirements for technical rescue helmets. These helmets are intended to protect the upper head mainly against the effects of mechanical hazards such as impact and penetration, flame, electrical and chemical hazards while conducting technical rescue and associated activities. \n   Technical rescues involve the environments and conditions associated with operational scenarios such as but not limited to those found during road traffic collisions, railway incidents and when working in and around collapsed structures, often for extended periods of time, after natural disasters (flood, earthquake, etc.). \n   Requirements for marking and information to be supplied by the manufacturer are included. \n   Helmets for use while firefighting in buildings and other structures or in wildland firefighting environments, are not covered by this European Standard see EN 443 and EN 16471. \n   Helmets for use in water rescue operations using craft, such as boats, canoes etc., are also not covered by this European Standard. \n   Protection of the face and eyes, when not provided by visors, ears and neck might require additional items of personal protective equipment (PPE), which are not covered by this European Standard. \n ","sku":"000000000030265286","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":186.0,"compare_at_price":93.0,"price_ratio":2.0,"price_range":"150:200","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_73cd0b88-d5ab-4789-b9da-2a3fac3a62cc.png?v=1625840431","named_tags":{},"named_tags_names":[],"objectID":"40327563182245","_snippetResult":{"body_html_safe":{"value":"operational scenarios such as but <em>not</em> limited to those <em>found</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Firefighters helmets. Helmets for technical rescue","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Healthcare & Medical Devices","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"13.340.20 Head protective equipment","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Dimensions","matchLevel":"none","matchedWords":[]},{"value":"Preferred sizes","matchLevel":"none","matchedWords":[]},{"value":"Headforms","matchLevel":"none","matchedWords":[]},{"value":"Mass","matchLevel":"none","matchedWords":[]},{"value":"Test models","matchLevel":"none","matchedWords":[]},{"value":"Test methods","matchLevel":"none","matchedWords":[]},{"value":"Size coding","matchLevel":"none","matchedWords":[]},{"value":"Test equipment","matchLevel":"none","matchedWords":[]},{"value":"Coordinates (mathematics)","matchLevel":"none","matchedWords":[]},{"value":"Marking","matchLevel":"none","matchedWords":[]},{"value":"Size","matchLevel":"none","matchedWords":[]},{"value":"Helmets (protective)","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> EN 16473:2014","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This European Standard specifies the minimum requirements for technical rescue helmets. These helmets are intended to protect the upper head mainly against the effects of mechanical hazards such as impact and penetration, flame, electrical and chemical hazards while conducting technical rescue and associated activities. \n   Technical rescues involve the environments and conditions associated with operational scenarios such as but <em>not</em> limited to those <em>found</em> during road traffic collisions, railway incidents and when working in and around collapsed structures, often for extended periods of time, after natural disasters (flood, earthquake, etc.). \n   Requirements for marking and information to be supplied by the manufacturer are included. \n   Helmets for use while firefighting in buildings and other structures or in wildland firefighting environments, are <em>not</em> covered by this European Standard see EN 443 and EN 16471. \n   Helmets for use in water rescue operations using craft, such as boats, canoes etc., are also <em>not</em> covered by this European Standard. \n   Protection of the face and eyes, when <em>not</em> provided by visors, ears and neck might require additional items of personal protective equipment (PPE), which are <em>not</em> covered by this European Standard. \n ","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["not","found"]}}},{"title":"Fertilizers. Determination of nitric and ammoniacal nitrogen according to Devarda","updated_at":"2021-07-07T00:29:19.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Distillation methods of analysis","Nitrogen","Reduction methods","Chemical analysis and testing","Soil improvement","Determination of content","Ammonia","Agricultural chemicals","Ammoniacal nitrogen","Volumetric analysis","Fertilizers"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["65.080 Fertilizers"],"industriesAlgoliaStringArray":["Agriculture"],"publishedDate":"2009-02-28","publisher":"BSI","status":"Current","statusNumeric":300,"primaryDesignator":"BS EN 15476:2009"},"group_search":{"description":"Fertilizers. Determination of nitric and ammoniacal nitrogen according to Devarda","member_price":67,"price":134,"title":"BS EN 15476:2009"}},"handle":"fertilizers-determination-of-nitric-and-ammoniacal-nitrogen-according-to-devarda","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892062179493,"_tags":["id:6892062179493","indexing_token:410ec6522b7a72555dc8e6f3b0995b34"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_91538854-988c-415d-acb9-5f4e2c4e4d8b.png?v=1625614159","created_at":"2021-07-07T00:29:17.000Z","published_at":"2021-07-07T00:29:16.000Z","body_html_safe":"  BS EN 15476:2009 Fertilizers. Determination of nitric and ammoniacal nitrogen according to Devarda  \r\n BS EN 15476 specifies a method for the determination of the ammoniacal nitrogen content in fertilizers. The method is applicable to all nitrogenous fertilizers including compound fertilizers, in which nitrogen is found exclusively either in the form of ammonium salts or ammonium salts together with nitrates. \r\n BS EN 15476 is not applicable to fertilizers containing urea, cyanamide or other organic nitrogenous compounds. \r\n  Contents of BS EN 15476:  \r\n \r\n Foreword  \r\n Scope  \r\n Normative references  \r\n Terms and definitions  \r\n Principle  \r\n Reagents  \r\n Apparatus  \r\n Sampling and sample preparation  \r\n Procedure  \r\n Calculation and expression of the result  \r\n Precision  \r\n Test report  \r\n Results of the inter-laboratory tests  \r\n Bibliography  \n ","sku":"000000000030179305","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_91538854-988c-415d-acb9-5f4e2c4e4d8b.png?v=1625614159","named_tags":{},"named_tags_names":[],"objectID":"40308860911781","_snippetResult":{"body_html_safe":{"value":"ammonium salts together with nitrates. \r\n <em>BS</em> EN 15476 is <em>not</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Fertilizers. Determination of nitric and ammoniacal nitrogen according to Devarda","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Distillation methods of analysis","matchLevel":"none","matchedWords":[]},{"value":"Nitrogen","matchLevel":"none","matchedWords":[]},{"value":"Reduction methods","matchLevel":"none","matchedWords":[]},{"value":"Chemical analysis and testing","matchLevel":"none","matchedWords":[]},{"value":"Soil improvement","matchLevel":"none","matchedWords":[]},{"value":"Determination of content","matchLevel":"none","matchedWords":[]},{"value":"Ammonia","matchLevel":"none","matchedWords":[]},{"value":"Agricultural chemicals","matchLevel":"none","matchedWords":[]},{"value":"Ammoniacal nitrogen","matchLevel":"none","matchedWords":[]},{"value":"Volumetric analysis","matchLevel":"none","matchedWords":[]},{"value":"Fertilizers","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"65.080 Fertilizers","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Agriculture","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN 15476:2009","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  <em>BS</em> EN 15476:2009 Fertilizers. Determination of nitric and ammoniacal nitrogen according to Devarda  \r\n <em>BS</em> EN 15476 specifies a method for the determination of the ammoniacal nitrogen content in fertilizers. The method is applicable to all nitrogenous fertilizers including compound fertilizers, in which nitrogen is <em>found</em> exclusively either in the form of ammonium salts or ammonium salts together with nitrates. \r\n <em>BS</em> EN 15476 is <em>not</em> applicable to fertilizers containing urea, cyanamide or other organic nitrogenous compounds. \r\n  Contents of <em>BS</em> EN 15476:  \r\n \r\n Foreword  \r\n Scope  \r\n Normative references  \r\n Terms and definitions  \r\n Principle  \r\n Reagents  \r\n Apparatus  \r\n Sampling and sample preparation  \r\n Procedure  \r\n Calculation and expression of the result  \r\n Precision  \r\n Test report  \r\n Results of the inter-laboratory tests  \r\n Bibliography  \n ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Fertilizers. Determination of ammoniacal nitrogen","updated_at":"2021-07-07T00:29:11.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Distillation methods of analysis","Soil improvement","Chemical analysis and testing","Nitrogen","Volumetric analysis","Fertilizers","Ammonia","Ammoniacal nitrogen","Agricultural chemicals","Determination of content"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["65.080 Fertilizers"],"industriesAlgoliaStringArray":["Agriculture"],"publishedDate":"2009-02-28","publisher":"BSI","status":"Current","statusNumeric":300,"primaryDesignator":"BS EN 15475:2009"},"group_search":{"description":"Fertilizers. Determination of ammoniacal nitrogen","member_price":67,"price":134,"title":"BS EN 15475:2009"}},"handle":"fertilizers-determination-of-ammoniacal-nitrogen","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892061655205,"_tags":["id:6892061655205","indexing_token:2c651eb746c82536b1237663f612fa05"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":134.0,"variants_max_price":134.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_407c0d61-f92e-4c29-9540-e872fa282c80.png?v=1625614151","created_at":"2021-07-07T00:29:08.000Z","published_at":"2021-07-07T00:29:08.000Z","body_html_safe":"  BS EN 15475:2009 Fertilizers. Determination of ammoniacal nitrogen  \r\n BS EN 15475 specifies a method for the determination of the ammoniacal nitrogen content in fertilizers. The method is applicable to all nitrogenous fertilizers including compound fertilizers, in which nitrogen is found exclusively either in the form of ammonium salts or ammonium salts together with nitrates. \r\n BS EN 15475 does not apply to fertilizers containing urea, cyanamide or other organic nitrogenous compounds. \r\n  Contents of BS EN 15475:  \r\n \r\n Foreword  \r\n Scope  \r\n Normative references  \r\n Terms and definitions  \r\n Principle  \r\n Reagents  \r\n Apparatus  \r\n Sampling and sample preparation  \r\n Procedure  \r\n Calculation and expression of the result  \r\n Precision  \r\n Test report  \r\n Results of the inter-laboratory tests  \r\n Bibliography  \n ","sku":"000000000030179302","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":134.0,"compare_at_price":67.0,"price_ratio":2.0,"price_range":"100:150","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_407c0d61-f92e-4c29-9540-e872fa282c80.png?v=1625614151","named_tags":{},"named_tags_names":[],"objectID":"40308860387493","_snippetResult":{"body_html_safe":{"value":"ammonium salts together with nitrates. \r\n <em>BS</em> EN 15475 does <em>not</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Fertilizers. Determination of ammoniacal nitrogen","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Distillation methods of analysis","matchLevel":"none","matchedWords":[]},{"value":"Soil improvement","matchLevel":"none","matchedWords":[]},{"value":"Chemical analysis and testing","matchLevel":"none","matchedWords":[]},{"value":"Nitrogen","matchLevel":"none","matchedWords":[]},{"value":"Volumetric analysis","matchLevel":"none","matchedWords":[]},{"value":"Fertilizers","matchLevel":"none","matchedWords":[]},{"value":"Ammonia","matchLevel":"none","matchedWords":[]},{"value":"Ammoniacal nitrogen","matchLevel":"none","matchedWords":[]},{"value":"Agricultural chemicals","matchLevel":"none","matchedWords":[]},{"value":"Determination of content","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"65.080 Fertilizers","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Agriculture","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN 15475:2009","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  <em>BS</em> EN 15475:2009 Fertilizers. Determination of ammoniacal nitrogen  \r\n <em>BS</em> EN 15475 specifies a method for the determination of the ammoniacal nitrogen content in fertilizers. The method is applicable to all nitrogenous fertilizers including compound fertilizers, in which nitrogen is <em>found</em> exclusively either in the form of ammonium salts or ammonium salts together with nitrates. \r\n <em>BS</em> EN 15475 does <em>not</em> apply to fertilizers containing urea, cyanamide or other organic nitrogenous compounds. \r\n  Contents of <em>BS</em> EN 15475:  \r\n \r\n Foreword  \r\n Scope  \r\n Normative references  \r\n Terms and definitions  \r\n Principle  \r\n Reagents  \r\n Apparatus  \r\n Sampling and sample preparation  \r\n Procedure  \r\n Calculation and expression of the result  \r\n Precision  \r\n Test report  \r\n Results of the inter-laboratory tests  \r\n Bibliography  \n ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Doorsets and openable windows with fire resisting and/ or smoke control characteristics. Requirements and classification","updated_at":"2021-07-07T01:04:02.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Doorsets","Smoke control","Fire resistance","Structural fire protection","Door closers","Fire-resistant materials","Opening windows","Performance testing","Doors","Windows","Classification systems","Closing and check mechanisms","Construction systems parts","Fire safety in buildings"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["91.060.50 Doors and windows"],"industriesAlgoliaStringArray":["Construction & Building"],"publishedDate":"2006-01-16","publisher":"BSI","status":"Withdrawn","statusNumeric":100,"primaryDesignator":"BS EN 14600:2005"},"group_search":{"description":"Doorsets and openable windows with fire resisting and/ or smoke control characteristics. Requirements and classification","member_price":93,"price":186,"title":"BS EN 14600:2005"}},"handle":"doorsets-and-openable-windows-with-fire-resisting-and-or-smoke-control-characteristics-requirements-and-classification","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892118769829,"_tags":["id:6892118769829","indexing_token:a2aa054ade6d1fcc456876ee88368890"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":186.0,"variants_max_price":186.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_d2117dc6-fe23-47ba-bcc1-577a1eb970f0.png?v=1625616241","created_at":"2021-07-07T01:03:59.000Z","published_at":"2021-07-07T01:03:59.000Z","body_html_safe":"  BS EN 14600:2005 Doorsets and openable windows with fire resisting and/ or smoke control characteristics. Requirements and classification  \r\n BS EN 14600 identifies the particular requirements and classifications necessary to demonstrate the characteristics of fire resistance, smoke leakage control and self closing durability for pedestrian doorsets, industrial type doorsets and openable windows. \r\n BS EN 14600 also gives requirements relating to the use of alternative items of building hardware. \r\n Requirements for performance characteristics for these products can be found in the appropriate product standards. \r\n BS EN 14600 does not cover any component reliability or durability testing of mechanical heat detectors (e.g. fusible link devices). \r\n  Contents of BS EN 14600:  \r\n \r\n Foreword \r\n Introduction  \r\n Scope  \r\n Normative references  \r\n Terms and definitions \r\n Requirements  \r\n Test methods \r\n Summary of evidence required and resulting classifications  \r\n Marking  \r\n Maintenance instructions  \r\n Characteristics for building hardware for use on fire resisting doorsets or fire resisting \r\n openable windows and smoke control doorsets  \r\n Classification requirements for elements of building hardware  \r\n Inspection and maintenance  \r\n Glass products to be incorporated in fire resisting doorsets and openable windows and/or \r\n medium temperature smoke control doorsets \r\n Route to classification for fire resisting doorsets and fire resisting openable windows \r\n Route to classification for smoke control doorsets  \r\n Bibliography \n ","sku":"000000000030200617","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":186.0,"compare_at_price":93.0,"price_ratio":2.0,"price_range":"150:200","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_d2117dc6-fe23-47ba-bcc1-577a1eb970f0.png?v=1625616241","named_tags":{},"named_tags_names":[],"objectID":"40308952334501","_snippetResult":{"body_html_safe":{"value":"in the appropriate product standards. \r\n <em>BS</em> EN 14600 does <em>not</em>","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Doorsets and openable windows with fire resisting and/ or smoke control characteristics. Requirements and classification","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Doorsets","matchLevel":"none","matchedWords":[]},{"value":"Smoke control","matchLevel":"none","matchedWords":[]},{"value":"Fire resistance","matchLevel":"none","matchedWords":[]},{"value":"Structural fire protection","matchLevel":"none","matchedWords":[]},{"value":"Door closers","matchLevel":"none","matchedWords":[]},{"value":"Fire-resistant materials","matchLevel":"none","matchedWords":[]},{"value":"Opening windows","matchLevel":"none","matchedWords":[]},{"value":"Performance testing","matchLevel":"none","matchedWords":[]},{"value":"Doors","matchLevel":"none","matchedWords":[]},{"value":"Windows","matchLevel":"none","matchedWords":[]},{"value":"Classification systems","matchLevel":"none","matchedWords":[]},{"value":"Closing and check mechanisms","matchLevel":"none","matchedWords":[]},{"value":"Construction systems parts","matchLevel":"none","matchedWords":[]},{"value":"Fire safety in buildings","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"91.060.50 Doors and windows","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Construction & Building","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Withdrawn","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN 14600:2005","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  <em>BS</em> EN 14600:2005 Doorsets and openable windows with fire resisting and/ or smoke control characteristics. Requirements and classification  \r\n <em>BS</em> EN 14600 identifies the particular requirements and classifications necessary to demonstrate the characteristics of fire resistance, smoke leakage control and self closing durability for pedestrian doorsets, industrial type doorsets and openable windows. \r\n <em>BS</em> EN 14600 also gives requirements relating to the use of alternative items of building hardware. \r\n Requirements for performance characteristics for these products can be <em>found</em> in the appropriate product standards. \r\n <em>BS</em> EN 14600 does <em>not</em> cover any component reliability or durability testing of mechanical heat detectors (e.g. fusible link devices). \r\n  Contents of <em>BS</em> EN 14600:  \r\n \r\n Foreword \r\n Introduction  \r\n Scope  \r\n Normative references  \r\n Terms and definitions \r\n Requirements  \r\n Test methods \r\n Summary of evidence required and resulting classifications  \r\n Marking  \r\n Maintenance instructions  \r\n Characteristics for building hardware for use on fire resisting doorsets or fire resisting \r\n openable windows and smoke control doorsets  \r\n Classification requirements for elements of building hardware  \r\n Inspection and maintenance  \r\n Glass products to be incorporated in fire resisting doorsets and openable windows and/or \r\n medium temperature smoke control doorsets \r\n Route to classification for fire resisting doorsets and fire resisting openable windows \r\n Route to classification for smoke control doorsets  \r\n Bibliography \n ","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Electric cables. Thermosetting insulated, armoured cables of rated voltages of 600/1 000 V and 1 900/3 300 V for fixed installations, having low emission of smoke and corrosive gases when affected by fire. Specification","updated_at":"2021-07-10T17:41:03.000Z","meta":{"global":{"status":"Current","publishedDate":"2016-04-30","publisher":"BSI","designatedStandard":"false","industriesAlgoliaStringArray":["Electrical & Electronic"],"icsCodesAlgoliaStringArray":["29.060.20 Cables"],"descriptorsAlgoliaStringArray":["Electric conductors","Testing conditions","Electrical insulating materials","Power cables","Dimensions","Marking","Thickness","Armoured cables","Tensile strength","Multicore cables","Test equipment","Elongation at fracture","Copper","Single-core cables","Thermosetting polymers","Rated voltage","Ethylene-propylene rubber","Electrical testing","Diameter","Polyethylene","Aluminium","Fire safety","Wear tests","Insulated cables","Electrical resistance","Fire-resistant materials","Installation","Smoke","Identification methods","Electric power systems","Colour codes","Specimen preparation","Type testing","Sheathed cables","Selection","Fire tests","Performance","Combustion products","Electric cables"],"statusNumeric":300,"primaryDesignator":"BS 6724:2016"},"group_search":{"title":"BS 6724:2016","description":"Electric cables. Thermosetting insulated, armoured cables of rated voltages of 600/1 000 V and 1 900/3 300 V for fixed installations, having low emission of smoke and corrosive gases when affected by fire. Specification","price":246,"member_price":123}},"handle":"electric-cables-thermosetting-insulated-armoured-cables-of-rated-voltages-of-600-1-000-v-and-1-900-3-300-v-for-fixed-installations-having-low-emission-of-smoke-and-corrosive-gases-when-affected-by-fire-specification","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6901346500773,"_tags":["id:6901346500773"],"tags":["format:digital","has-hardcopy","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":246.0,"variants_max_price":246.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_ac19547d-01d3-4d5a-9e29-9b8f0cc31645.png?v=1625938863","created_at":"2021-07-10T17:41:01.000Z","published_at":"2021-07-10T17:41:01.000Z","body_html_safe":" \n   1   Scope \n   This British Standard specifies requirements for the construction and performance of thermosetting insulated, armoured cables of rated voltages of 600/1 000 V and 1 900/3 300 V, having low emission of smoke and corrosive gases when affected by fire. \n   \n     \n       \n         NOTE 1 \n         Other thermosetting insulated, armoured cables for voltages of 600/1 000 V and 1 900/3 300 V can be found in BS 5467, but these do not have low levels of emission of smoke and corrosive products under exposure to fire.  \n   \n   This British Standard is applicable to cables for use in fixed installations in industrial areas, buildings or similar applications. \n   This British Standard specifies requirements for the following types of cables: \n   \n     \n       \n         \n           a)  600/1 000 V cables, wire armoured and oversheathed having single-core, two-, three-, four- and five-core stranded copper conductor; \n       \n       \n         \n           b)  600/1 000 V multicore auxiliary cables, wire armoured, and oversheathed, stranded copper conductor; and \n       \n       \n         \n           c)  1 900/3 300 V cables, wire armoured and oversheathed, having single-core or three-core stranded copper conductor. \n       \n     \n   \n   This British Standard is applicable to cables that are designed for a maximum sustained conductor temperature of 90 °C and for a maximum short-circuit conductor temperature of 250 °C (for a maximum of 5 s).<...","sku":"000000000030354579","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":0,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":246.0,"compare_at_price":123.0,"price_ratio":2.0,"price_range":"200:250","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_ac19547d-01d3-4d5a-9e29-9b8f0cc31645.png?v=1625938863","named_tags":{},"named_tags_names":[],"objectID":"40333720125605","_snippetResult":{"body_html_safe":{"value":"3 300 V can be <em>found</em> in <em>BS</em> 5467, but","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Electric cables. Thermosetting insulated, armoured cables of rated voltages of 600/1 000 V and 1 900/3 300 V for fixed installations, having low emission of smoke and corrosive gases when affected by fire. Specification","matchLevel":"none","matchedWords":[]},"meta":{"global":{"status":{"value":"Current","matchLevel":"none","matchedWords":[]},"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"industriesAlgoliaStringArray":[{"value":"Electrical & Electronic","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"29.060.20 Cables","matchLevel":"none","matchedWords":[]}],"descriptorsAlgoliaStringArray":[{"value":"Electric conductors","matchLevel":"none","matchedWords":[]},{"value":"Testing conditions","matchLevel":"none","matchedWords":[]},{"value":"Electrical insulating materials","matchLevel":"none","matchedWords":[]},{"value":"Power cables","matchLevel":"none","matchedWords":[]},{"value":"Dimensions","matchLevel":"none","matchedWords":[]},{"value":"Marking","matchLevel":"none","matchedWords":[]},{"value":"Thickness","matchLevel":"none","matchedWords":[]},{"value":"Armoured cables","matchLevel":"none","matchedWords":[]},{"value":"Tensile strength","matchLevel":"none","matchedWords":[]},{"value":"Multicore cables","matchLevel":"none","matchedWords":[]},{"value":"Test equipment","matchLevel":"none","matchedWords":[]},{"value":"Elongation at fracture","matchLevel":"none","matchedWords":[]},{"value":"Copper","matchLevel":"none","matchedWords":[]},{"value":"Single-core cables","matchLevel":"none","matchedWords":[]},{"value":"Thermosetting polymers","matchLevel":"none","matchedWords":[]},{"value":"Rated voltage","matchLevel":"none","matchedWords":[]},{"value":"Ethylene-propylene rubber","matchLevel":"none","matchedWords":[]},{"value":"Electrical testing","matchLevel":"none","matchedWords":[]},{"value":"Diameter","matchLevel":"none","matchedWords":[]},{"value":"Polyethylene","matchLevel":"none","matchedWords":[]},{"value":"Aluminium","matchLevel":"none","matchedWords":[]},{"value":"Fire safety","matchLevel":"none","matchedWords":[]},{"value":"Wear tests","matchLevel":"none","matchedWords":[]},{"value":"Insulated cables","matchLevel":"none","matchedWords":[]},{"value":"Electrical resistance","matchLevel":"none","matchedWords":[]},{"value":"Fire-resistant materials","matchLevel":"none","matchedWords":[]},{"value":"Installation","matchLevel":"none","matchedWords":[]},{"value":"Smoke","matchLevel":"none","matchedWords":[]},{"value":"Identification methods","matchLevel":"none","matchedWords":[]},{"value":"Electric power systems","matchLevel":"none","matchedWords":[]},{"value":"Colour codes","matchLevel":"none","matchedWords":[]},{"value":"Specimen preparation","matchLevel":"none","matchedWords":[]},{"value":"Type testing","matchLevel":"none","matchedWords":[]},{"value":"Sheathed cables","matchLevel":"none","matchedWords":[]},{"value":"Selection","matchLevel":"none","matchedWords":[]},{"value":"Fire tests","matchLevel":"none","matchedWords":[]},{"value":"Performance","matchLevel":"none","matchedWords":[]},{"value":"Combustion products","matchLevel":"none","matchedWords":[]},{"value":"Electric cables","matchLevel":"none","matchedWords":[]}],"primaryDesignator":{"value":"<em>BS</em> 6724:2016","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":" \n   1   Scope \n   This British Standard specifies requirements for the construction and performance of thermosetting insulated, armoured cables of rated voltages of 600/1 000 V and 1 900/3 300 V, having low emission of smoke and corrosive gases when affected by fire. \n   \n     \n       \n         NOTE 1 \n         Other thermosetting insulated, armoured cables for voltages of 600/1 000 V and 1 900/3 300 V can be <em>found</em> in <em>BS</em> 5467, but these do <em>not</em> have low levels of emission of smoke and corrosive products under exposure to fire.  \n   \n   This British Standard is applicable to cables for use in fixed installations in industrial areas, buildings or similar applications. \n   This British Standard specifies requirements for the following types of cables: \n   \n     \n       \n         \n           a)  600/1 000 V cables, wire armoured and oversheathed having single-core, two-, three-, four- and five-core stranded copper conductor; \n       \n       \n         \n           b)  600/1 000 V multicore auxiliary cables, wire armoured, and oversheathed, stranded copper conductor; and \n       \n       \n         \n           c)  1 900/3 300 V cables, wire armoured and oversheathed, having single-core or three-core stranded copper conductor. \n       \n     \n   \n   This British Standard is applicable to cables that are designed for a maximum sustained conductor temperature of 90 °C and for a maximum short-circuit conductor temperature of 250 °C (for a maximum of 5 s).<...","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}},{"title":"Non-destructive testing of welds. Radiographic testing - X- and gamma-ray techniques with film","updated_at":"2021-07-07T02:14:37.000Z","meta":{"global":{"descriptorsAlgoliaStringArray":["Test equipment","Gamma-radiation","X-ray apparatus","Intensifying screens","Radiographic testing","Photographic images","Optical density","X-rays","Pressure vessels","Specimen preparation","Radiography","Grades (quality)","Fusion welding","Thickness","Welded joints","Pipes","Radiographic film","Non-destructive testing","Safety measures","Wires","Boilers","Gamma-ray apparatus"],"designatedStandard":"false","icsCodesAlgoliaStringArray":["19.100 Non-destructive testing","25.160.40 Welded joints and welds"],"industriesAlgoliaStringArray":["Service Management & Process","Manufacturing Processing & Goods"],"publishedDate":"2013-01-31","publisher":"BSI","status":"Under Review","statusNumeric":200,"primaryDesignator":"BS EN ISO 17636-1:2013"},"group_search":{"description":"Non-destructive testing of welds. Radiographic testing - X- and gamma-ray techniques with film","member_price":109,"price":218,"title":"BS EN ISO 17636-1:2013"}},"handle":"non-destructive-testing-of-welds-radiographic-testing-x-and-gamma-ray-techniques-with-film","vendor":"BSI Shop","product_type":"standard","template_suffix":null,"id":6892282052773,"_tags":["id:6892282052773","indexing_token:36043bf917ce70a521b00903394faaac"],"tags":["format:digital","has-hardcopy","Ingestion-build-44616","Ingestion-build-44680"],"option_names":["title"],"variants_count":1,"variants_inventory_count":0,"variants_min_price":218.0,"variants_max_price":218.0,"product_image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_d3fa2972-f5f8-42c1-8096-35e402eae1f8.png?v=1625620477","created_at":"2021-07-07T02:14:35.000Z","published_at":"2021-07-07T02:14:35.000Z","body_html_safe":"  What is this standard about?  \r\n BS EN ISO 17636-1 specifies guidelines relating to radiographic examination of fusion welded joints in metallic materials using industrial radiographic film techniques. \r\n  Who is this standard for?  \r\n \r\n Manufacturers/designers      of fusion welded joints \r\n Suppliers      and users of equipment containing fusion welded joints \r\n Professionals      responsible for radiographic examinations \r\n Regulatory      bodies \r\n Health      care authorities \r\n Quality/health      and safety industries \r\n \r\n  Why should you use this standard?  \r\n This first part of the international standard outlines the latest techniques of radiography, to enable satisfactory and repeatable results to be economically obtained. The techniques are based on generally recognized practice and fundamental theory of the subject, inspection of fusion welded joints with industrial radiographic films. \r\n It applies to the joints of plates and pipes. Besides its conventional meaning, “pipe” as used in this standard covers other cylindrical bodies such as tubes, penstocks, boiler drums, and pressure vessels. \r\n  Note: BS EN ISO 17636 does not specify acceptance levels for any of the indications found on the radiographs . \r\n  What’s changed since the last update?  \r\n BS EN ISO 17636 has been fully revised by experts to bring it up to date with technological developments and industry best practice. It has been divided into two parts - BS EN ISO 17636-1 and  BS EN ISO 17636-2  on X- and gamma-ray techniques with digital detectors. These now replace BS EN ISO 17636:2003. \r\n The main changes to Part 1 are: \r\n \r\n The normative references have been updated and the text editorially revised \r\n Any X-ray devices up to 1 000 kV have been included<...","sku":"000000000030279361","barcode":null,"option1":"Digital","option2":null,"option3":null,"position":1,"requires_shipping":false,"taxable":true,"inventory_management":null,"inventory_policy":"deny","inventory_quantity":-1,"variant_title":"Digital","inventory_management_shopify":0,"inventory_available":false,"options":{"title":"Digital"},"price":218.0,"compare_at_price":109.0,"price_ratio":2.0,"price_range":"200:250","grams":0,"weight":"0.0lb","image":"https://cdn.shopify.com/s/files/1/0555/5329/4501/products/Digital_d3fa2972-f5f8-42c1-8096-35e402eae1f8.png?v=1625620477","named_tags":{},"named_tags_names":[],"recently_ordered_count":1,"objectID":"40309306753189","_snippetResult":{"body_html_safe":{"value":"<em>BS</em> EN ISO 17636 does <em>not</em> specify acceptance levels for","matchLevel":"partial"}},"_highlightResult":{"title":{"value":"Non-destructive testing of welds. Radiographic testing - X- and gamma-ray techniques with film","matchLevel":"none","matchedWords":[]},"meta":{"global":{"descriptorsAlgoliaStringArray":[{"value":"Test equipment","matchLevel":"none","matchedWords":[]},{"value":"Gamma-radiation","matchLevel":"none","matchedWords":[]},{"value":"X-ray apparatus","matchLevel":"none","matchedWords":[]},{"value":"Intensifying screens","matchLevel":"none","matchedWords":[]},{"value":"Radiographic testing","matchLevel":"none","matchedWords":[]},{"value":"Photographic images","matchLevel":"none","matchedWords":[]},{"value":"Optical density","matchLevel":"none","matchedWords":[]},{"value":"X-rays","matchLevel":"none","matchedWords":[]},{"value":"Pressure vessels","matchLevel":"none","matchedWords":[]},{"value":"Specimen preparation","matchLevel":"none","matchedWords":[]},{"value":"Radiography","matchLevel":"none","matchedWords":[]},{"value":"Grades (quality)","matchLevel":"none","matchedWords":[]},{"value":"Fusion welding","matchLevel":"none","matchedWords":[]},{"value":"Thickness","matchLevel":"none","matchedWords":[]},{"value":"Welded joints","matchLevel":"none","matchedWords":[]},{"value":"Pipes","matchLevel":"none","matchedWords":[]},{"value":"Radiographic film","matchLevel":"none","matchedWords":[]},{"value":"Non-destructive testing","matchLevel":"none","matchedWords":[]},{"value":"Safety measures","matchLevel":"none","matchedWords":[]},{"value":"Wires","matchLevel":"none","matchedWords":[]},{"value":"Boilers","matchLevel":"none","matchedWords":[]},{"value":"Gamma-ray apparatus","matchLevel":"none","matchedWords":[]}],"icsCodesAlgoliaStringArray":[{"value":"19.100 Non-destructive testing","matchLevel":"none","matchedWords":[]},{"value":"25.160.40 Welded joints and welds","matchLevel":"none","matchedWords":[]}],"industriesAlgoliaStringArray":[{"value":"Service Management & Process","matchLevel":"none","matchedWords":[]},{"value":"Manufacturing Processing & Goods","matchLevel":"none","matchedWords":[]}],"publisher":{"value":"BSI","matchLevel":"none","matchedWords":[]},"status":{"value":"Under Review","matchLevel":"none","matchedWords":[]},"primaryDesignator":{"value":"<em>BS</em> EN ISO 17636-1:2013","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["bs"]}}},"body_html_safe":{"value":"  What is this standard about?  \r\n <em>BS</em> EN ISO 17636-1 specifies guidelines relating to radiographic examination of fusion welded joints in metallic materials using industrial radiographic film techniques. \r\n  Who is this standard for?  \r\n \r\n Manufacturers/designers      of fusion welded joints \r\n Suppliers      and users of equipment containing fusion welded joints \r\n Professionals      responsible for radiographic examinations \r\n Regulatory      bodies \r\n Health      care authorities \r\n Quality/health      and safety industries \r\n \r\n  Why should you use this standard?  \r\n This first part of the international standard outlines the latest techniques of radiography, to enable satisfactory and repeatable results to be economically obtained. The techniques are based on generally recognized practice and fundamental theory of the subject, inspection of fusion welded joints with industrial radiographic films. \r\n It applies to the joints of plates and pipes. Besides its conventional meaning, “pipe” as used in this standard covers other cylindrical bodies such as tubes, penstocks, boiler drums, and pressure vessels. \r\n  Note: <em>BS</em> EN ISO 17636 does <em>not</em> specify acceptance levels for any of the indications <em>found</em> on the radiographs . \r\n  What’s changed since the last update?  \r\n <em>BS</em> EN ISO 17636 has been fully revised by experts to bring it up to date with technological developments and industry best practice. It has been divided into two parts - <em>BS</em> EN ISO 17636-1 and  <em>BS</em> EN ISO 17636-2  on X- and gamma-ray techniques with digital detectors. These now replace <em>BS</em> EN ISO 17636:2003. \r\n The main changes to Part 1 are: \r\n \r\n The normative references have been updated and the text editorially revised \r\n Any X-ray devices up to 1 000 kV have been included<...","matchLevel":"full","fullyHighlighted":false,"matchedWords":["bs","not","found"]}}}],"nbHits":562,"page":0,"nbPages":29,"hitsPerPage":20,"exhaustiveNbHits":true,"query":"BS NOT FOUND","params":"query=BS+NOT+FOUND&facetFilters=product_type%3Astandard&distinct=1&filters=NOT+tags%3Ahas-digital&filters=NOT+tags%3Anot-for-sale&filters=NOT+product_type%3Amembership","renderingContent":{},"processingTimeMS":12}
    http_version:
  recorded_at: Wed, 25 Aug 2021 21:50:23 GMT
recorded_with: VCR 5.0.0
